   1               		.file	"keymap_custom.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               	.global	action_get_macro
  13               	action_get_macro:
  14               	.LFB4:
  15               		.file 1 "keymap_custom.c"
   1:keymap_custom.c **** /*
   2:keymap_custom.c ****  * Hasu: my personal keymap
   3:keymap_custom.c ****  */
   4:keymap_custom.c **** #include "keymap_common.h"
   5:keymap_custom.c **** 
   6:keymap_custom.c **** 
   7:keymap_custom.c **** #ifdef KEYMAP_SECTION_ENABLE
   8:keymap_custom.c **** const uint8_t keymaps[][MATRIX_ROWS][MATRIX_COLS] __attribute__ ((section (".keymap.keymaps"))) = {
   9:keymap_custom.c **** #else
  10:keymap_custom.c **** const uint8_t keymaps[][MATRIX_ROWS][MATRIX_COLS] PROGMEM = {
  11:keymap_custom.c **** #endif
  12:keymap_custom.c ****     /* Layer 0: Fn0 Default Layer
  13:keymap_custom.c ****      * ,-----------------------------------------------------------.
  14:keymap_custom.c ****      * |Esc|  1|  2|  3|  4|  5|  6|  7|  8|  9|  0|  -|  =|  \|  `|
  15:keymap_custom.c ****      * |-----------------------------------------------------------|
  16:keymap_custom.c ****      * |Tab  |  Q|  W|  E|  R|  T|  Y|  U|  I|  O|  P|  [|  ]|Backs|
  17:keymap_custom.c ****      * |-----------------------------------------------------------|
  18:keymap_custom.c ****      * |Fn3   |  A|  S|  D|  F|  G|  H|  J|  K|  L|  ;|  '|Enter   |
  19:keymap_custom.c ****      * |-----------------------------------------------------------|
  20:keymap_custom.c ****      * |Shift   |  Z|  X|  C|  V|  B|  N|  M|  ,|  .|  /|Shift |Fn1|
  21:keymap_custom.c ****      * `-----------------------------------------------------------'
  22:keymap_custom.c ****      *       |Alt|Gui  |         Space         |Gui  |Alt|
  23:keymap_custom.c ****      *       `-------------------------------------------'
  24:keymap_custom.c ****      */
  25:keymap_custom.c ****     [0] = \
  26:keymap_custom.c ****     KEYMAP(ESC, 1,   2,   3,   4,   5,   6,   7,   8,   9,   0,   MINS,EQL, BSLS,GRV, \
  27:keymap_custom.c ****            TAB ,   Q,   W,   E,   R,   T,   Y,   U,   I,   O,   P,   LBRC,RBRC,BSPC, \
  28:keymap_custom.c ****            FN2  ,   A,   S,   D,   F,   G,   H,   J,   K,   L, SCLN, QUOT,ENT, \
  29:keymap_custom.c ****            LSFT  ,   Z,   X,   C,   V,   B,   N,   M, COMM, DOT, SLSH, RSFT,FN6, \
  30:keymap_custom.c ****                 LALT, FN1,           SPC           , RGUI, RALT),
  31:keymap_custom.c **** 
  32:keymap_custom.c ****     /* Layer 2: Fn2 Vi mode
  33:keymap_custom.c ****      * ,-----------------------------------------------------------.
  34:keymap_custom.c ****      * |Esc| F1| F2| F3| F4| F5| F6| F7| F8| F9|F10|F11|F12|Ins|Del|
  35:keymap_custom.c ****      * |-----------------------------------------------------------|
  36:keymap_custom.c ****      * |Tab  |   |   |   |   |   |   |   |   |   |   |   |    Backs|
  37:keymap_custom.c ****      * |-----------------------------------------------------------|
  38:keymap_custom.c ****      * |Fn3   |   |   |  |BSPC|   |Lef|Dow|Up |Rig|   |   |Return  |
  39:keymap_custom.c ****      * |-----------------------------------------------------------|
  40:keymap_custom.c ****      * |Shift   |   |   |   |   |   |   |   |   |   |   Shift |    |
  41:keymap_custom.c ****      * `-----------------------------------------------------------'
  42:keymap_custom.c ****      *       |Alt|Gui  |          Space        |Gui  |Alt|
  43:keymap_custom.c ****      *       `-------------------------------------------`
  44:keymap_custom.c ****      */
  45:keymap_custom.c ****     [1] = \
  46:keymap_custom.c ****     KEYMAP(GRV, 1,   2,   3,   4,   5,   6,   7,   8,   9,   0,   MINS,EQL, BSLS,GRV, \
  47:keymap_custom.c ****            TAB ,   Q,   W,   E,   R,   T,   Y,   U,   I,   O,   P,   LBRC,RBRC,BSPC, \
  48:keymap_custom.c ****            LCTL ,   A,   S,   D,   F,   G,   H,    J,   K ,  L, SCLN, QUOT,ENT, \
  49:keymap_custom.c ****            LSFT  ,   Z,   X,   C,   V,   B,   N,   M, COMM, DOT, SLSH, RSFT,TRNS, \
  50:keymap_custom.c ****                 LALT, TRNS,           SPC           , RGUI, RALT),
  51:keymap_custom.c **** 
  52:keymap_custom.c ****     /* Layer 3: Fn3 Vi mode[Slash]
  53:keymap_custom.c ****      * ,-----------------------------------------------------------.
  54:keymap_custom.c ****      * |Esc| F1| F2| F3| F4| F5| F6| F7| F8| F9|F10|F11|F12|Ins|Del|
  55:keymap_custom.c ****      * |-----------------------------------------------------------|
  56:keymap_custom.c ****      * |Tab  |   |   |   |   |   |   |   |   |   |   |   |    Backs|
  57:keymap_custom.c ****      * |-----------------------------------------------------------|
  58:keymap_custom.c ****      * |Fn2   |   |   |  |BSPC|   |Lef|Dow|Up |Rig|   |   |Return  |
  59:keymap_custom.c ****      * |-----------------------------------------------------------|
  60:keymap_custom.c ****      * |Shift   |   |   |   |   |   |   |   |   |   |   Shift |    |
  61:keymap_custom.c ****      * `-----------------------------------------------------------'
  62:keymap_custom.c ****      *       |Alt|Gui  |          Space        |Gui  |Alt|
  63:keymap_custom.c ****      *       `-------------------------------------------`
  64:keymap_custom.c ****      */
  65:keymap_custom.c ****     [2] = \
  66:keymap_custom.c ****     KEYMAP(ESC, TRNS, TRNS, TRNS, FN18, TRNS, FN19, TRNS, TRNS, TRNS, TRNS, TRNS, TRNS, INS, DEL, \
  67:keymap_custom.c ****            TAB , TRNS, TRNS, FN16, TRNS, TRNS, TRNS, TRNS, TRNS, TRNS, TRNS, TRNS, TRNS, BSPC, \
  68:keymap_custom.c ****            TRNS  , TRNS, TRNS, TRNS, TRNS, TRNS, FN10, FN11,  FN12,  FN13, TRNS, TRNS, TRNS, \
  69:keymap_custom.c ****            LSFT   , TRNS, TRNS, TRNS, TRNS, FN17, TRNS, TRNS, TRNS, TRNS, TRNS, RSFT, TRNS, \
  70:keymap_custom.c ****                 LALT, LGUI,            SPC             , RGUI, RALT),
  71:keymap_custom.c **** 
  72:keymap_custom.c **** 
  73:keymap_custom.c **** 
  74:keymap_custom.c ****     /* Layer 1: Fn1 HHKB mode[HHKB Fn]
  75:keymap_custom.c ****      * ,-----------------------------------------------------------.
  76:keymap_custom.c ****      * |Esc| F1| F2| F3| F4| F5| F6| F7| F8| F9|F10|F11|F12|Ins|Del|
  77:keymap_custom.c ****      * |-----------------------------------------------------------|
  78:keymap_custom.c ****      * |Caps |   |   |   |   |   |   |   |Psc|Slk|Pus|Up |   |Backs|
  79:keymap_custom.c ****      * |-----------------------------------------------------------|
  80:keymap_custom.c ****      * |Contro|VoD|VoU|Mut|   |   |  *|  /|Hom|PgU|Lef|Rig|Enter   |
  81:keymap_custom.c ****      * |-----------------------------------------------------------|
  82:keymap_custom.c ****      * |Shift   |   |   |   |   |   |  +|  -|End|PgD|Dow|Shift |   |
  83:keymap_custom.c ****      * `-----------------------------------------------------------'
  84:keymap_custom.c ****      *       |Alt|Gui  |         Space         |Gui  |Alt|
  85:keymap_custom.c ****      *       `-------------------------------------------'
  86:keymap_custom.c ****      */
  87:keymap_custom.c ****     [6] = \
  88:keymap_custom.c ****     KEYMAP(PWR, F1,  F2,  F3,  F4,  F5,  F6,  F7,  F8,  F9,  F10, F11, F12, INS, DEL, \
  89:keymap_custom.c ****            CAPS,NO,  NO,  NO,  NO,  NO,  NO,  NO,  PSCR,SLCK,PAUS, UP,  FN4,  BSPC, \
  90:keymap_custom.c ****            LCTL,VOLD,VOLU,MUTE,NO,  NO,  PAST,PSLS,HOME,PGUP,LEFT,RGHT,ENT, \
  91:keymap_custom.c ****            LSFT,NO,  NO,  NO,  NO,  NO,  PPLS,PMNS,END, PGDN,DOWN,RSFT,TRNS, \
  92:keymap_custom.c ****                 LALT,LGUI,          TRNS,               RGUI,RALT),
  93:keymap_custom.c **** 
  94:keymap_custom.c **** #if 0
  95:keymap_custom.c ****     /* Layer 3: Fn3 Mouse mode(IJKL)[Semicolon]
  96:keymap_custom.c ****      * ,-----------------------------------------------------------.
  97:keymap_custom.c ****      * |Esc| F1| F2| F3| F4| F5| F6| F7| F8| F9|F10|F11|F12|Ins|Del|
  98:keymap_custom.c ****      * |-----------------------------------------------------------|
  99:keymap_custom.c ****      * |Tab  |   |   |   |   |   |MwL|MwD|McU|MwU|MwR|Wbk|Wfr|Alt-T|
 100:keymap_custom.c ****      * |-----------------------------------------------------------|
 101:keymap_custom.c ****      * |Contro|   |   |   |   |   |Mb2|McL|McD|McR|Fn |   |Return  |
 102:keymap_custom.c ****      * |-----------------------------------------------------------|
 103:keymap_custom.c ****      * |Shift   |   |   |   |   |Mb3|Mb2|Mb1|Mb4|Mb5|   |Shift |   |
 104:keymap_custom.c ****      * `-----------------------------------------------------------'
 105:keymap_custom.c ****      *      |Alt |Gui  |          Mb1          |Fn   |Fn |
 106:keymap_custom.c ****      *      `--------------------------------------------'
 107:keymap_custom.c ****      * Mc: Mouse Cursor / Mb: Mouse Button / Mw: Mouse Wheel
 108:keymap_custom.c ****      */
 109:keymap_custom.c ****     [3] = \
 110:keymap_custom.c ****     KEYMAP(GRV, F1,  F2,  F3,  F4,  F5,  F6,  F7,  F8,  F9,  F10, F11, F12, INS, DEL, \
 111:keymap_custom.c ****            FN8, NO,  NO,  NO,  NO,  NO,  WH_L,WH_D,MS_U,WH_U,WH_R,FN9, FN10,FN8, \
 112:keymap_custom.c ****            LCTL,ACL0,ACL1,ACL2,ACL2,NO,  NO,  MS_L,MS_D,MS_R,FN3, NO,  ENT, \
 113:keymap_custom.c ****            LSFT,NO,  NO,  NO,  NO,  BTN3,BTN2,BTN1,FN9, FN10,NO,  RSFT,TRNS, \
 114:keymap_custom.c ****                 LALT,LGUI,          BTN1,               TRNS,TRNS),
 115:keymap_custom.c **** 
 116:keymap_custom.c ****     /* Layer 4: Fn4 Mouse mode(IJKL)[Space]
 117:keymap_custom.c ****      * ,-----------------------------------------------------------.
 118:keymap_custom.c ****      * |Esc| F1| F2| F3| F4| F5| F6| F7| F8| F9|F10|F11|F12|Ins|Del|
 119:keymap_custom.c ****      * |-----------------------------------------------------------|
 120:keymap_custom.c ****      * |Tab  |   |   |   |   |   |MwL|MwD|McU|MwU|MwR|Wbk|Wfr|Alt-T|
 121:keymap_custom.c ****      * |-----------------------------------------------------------|
 122:keymap_custom.c ****      * |Contro|   |   |   |   |   |Mb2|McL|McD|McR|Mb1|   |Return  |
 123:keymap_custom.c ****      * |-----------------------------------------------------------|
 124:keymap_custom.c ****      * |Shift   |   |   |   |   |Mb3|Mb2|Mb1|Mb4|Mb5|   |Shift |   |
 125:keymap_custom.c ****      * `-----------------------------------------------------------'
 126:keymap_custom.c ****      *      |Alt |Gui  |          Mb1          |Fn   |Fn |
 127:keymap_custom.c ****      *      `--------------------------------------------'
 128:keymap_custom.c ****      * Mc: Mouse Cursor / Mb: Mouse Button / Mw: Mouse Wheel
 129:keymap_custom.c ****      */
 130:keymap_custom.c ****     [4] = \
 131:keymap_custom.c ****     KEYMAP(GRV, F1,  F2,  F3,  F4,  F5,  F6,  F7,  F8,  F9,  F10, F11, F12, INS, DEL, \
 132:keymap_custom.c ****            FN8, NO,  NO,  NO,  NO,  NO,  WH_L,WH_D,MS_U,WH_U,WH_R,BTN4,BTN5,FN8, \
 133:keymap_custom.c ****            LCTL,VOLD,VOLU,MUTE,NO,  NO,  NO,  MS_L,MS_D,MS_R,BTN1,NO,  ENT, \
 134:keymap_custom.c ****            LSFT,NO,  NO,  NO,  NO,  BTN3,BTN2,BTN1,FN9, FN10,NO,  RSFT,TRNS, \
 135:keymap_custom.c ****                 LALT,LGUI,          TRNS,               TRNS,TRNS),
 136:keymap_custom.c **** #endif
 137:keymap_custom.c **** #if 0
 138:keymap_custom.c ****     /* Layer 3: Mouse mode(HJKL)[Semicolon]
 139:keymap_custom.c ****      * ,-----------------------------------------------------------.
 140:keymap_custom.c ****      * |Esc| F1| F2| F3| F4| F5| F6| F7| F8| F9|F10|F11|F12|Ins|Del|
 141:keymap_custom.c ****      * |-----------------------------------------------------------|
 142:keymap_custom.c ****      * |Tab  |   |   |   |   |   |MwL|MwD|MwU|MwR|   |   |   |Backs|
 143:keymap_custom.c ****      * |-----------------------------------------------------------|
 144:keymap_custom.c ****      * |Contro|   |   |   |   |   |McL|McD|McU|McR|Fn0|   |Return  |
 145:keymap_custom.c ****      * |-----------------------------------------------------------|
 146:keymap_custom.c ****      * |Shift   |   |   |   |   |Mb3|Mb2|Mb1|Mb4|Mb5|   |Shift |   |
 147:keymap_custom.c ****      * `-----------------------------------------------------------'
 148:keymap_custom.c ****      *      |Alt |Gui  |          Mb1          |Gui  |Fn0|
 149:keymap_custom.c ****      *      `--------------------------------------------'
 150:keymap_custom.c ****      * Mc: Mouse Cursor / Mb: Mouse Button / Mw: Mouse Wheel
 151:keymap_custom.c ****      */
 152:keymap_custom.c ****     KEYMAP(GRV, F1,  F2,  F3,  F4,  F5,  F6,  F7,  F8,  F9,  F10, F11, F12, INS, DEL, \
 153:keymap_custom.c ****            TAB, NO,  NO,  NO,  NO,  NO,  NO,  WH_D,WH_U,RGHT,NO,  NO,  NO,  BSPC, \
 154:keymap_custom.c ****            LCTL,NO,  ACL0,ACL1,ACL2,NO,  MS_L,MS_D,MS_U,MS_R,TRNS,QUOT,ENT, \
 155:keymap_custom.c ****            LSFT,NO,  NO,  NO,  NO,  BTN3,BTN2,BTN1,FN9, FN10,SLSH,RSFT,NO, \
 156:keymap_custom.c ****                 LALT,LGUI,          BTN1,               RGUI,TRNS),
 157:keymap_custom.c **** 
 158:keymap_custom.c ****     /* Layer4: Mouse mode(HJKL)[Space]
 159:keymap_custom.c ****      * ,-----------------------------------------------------------.
 160:keymap_custom.c ****      * |Esc| F1| F2| F3| F4| F5| F6| F7| F8| F9|F10|F11|F12|Ins|Del|
 161:keymap_custom.c ****      * |-----------------------------------------------------------|
 162:keymap_custom.c ****      * |Tab  |   |   |   |   |   |MwL|MwD|MwU|MwR|   |Wbk|Wfr|Alt-T|
 163:keymap_custom.c ****      * |-----------------------------------------------------------|
 164:keymap_custom.c ****      * |Contro|   |   |   |   |   |McL|McD|McU|McR|Fn0|   |Return  |
 165:keymap_custom.c ****      * |-----------------------------------------------------------|
 166:keymap_custom.c ****      * |Shift   |   |   |   |   |Mb3|Mb2|Mb1|Mb4|Mb5|   |Shift |   |
 167:keymap_custom.c ****      * `-----------------------------------------------------------'
 168:keymap_custom.c ****      *      |Alt |Gui  |          Fn0          |Gui  |Fn0|
 169:keymap_custom.c ****      *      `--------------------------------------------'
 170:keymap_custom.c ****      * Mc: Mouse Cursor / Mb: Mouse Button / Mw: Mouse Wheel
 171:keymap_custom.c ****      */
 172:keymap_custom.c ****     KEYMAP(GRV, F1,  F2,  F3,  F4,  F5,  F6,  F7,  F8,  F9,  F10, F11, F12, INS, DEL, \
 173:keymap_custom.c ****            FN8, NO,  NO,  NO,  NO,  NO,  NO,  WH_D,WH_U,RGHT,NO,  FN9, FN10,FN8, \
 174:keymap_custom.c ****            LCTL,NO,  ACL0,ACL1,ACL2,NO,  MS_L,MS_D,MS_U,MS_R,BTN1,NO,  ENT, \
 175:keymap_custom.c ****            LSFT,NO,  NO,  NO,  NO,  BTN3,BTN2,BTN1,FN9, FN10,NO,  RSFT,NO, \
 176:keymap_custom.c ****                 LALT,LGUI,          TRNS,               RGUI,RALT),
 177:keymap_custom.c **** #endif
 178:keymap_custom.c **** #if 0
 179:keymap_custom.c ****     /* Layer x: Matias half-qwerty keyboard style[Space]
 180:keymap_custom.c ****      * ,-----------------------------------------------------------.
 181:keymap_custom.c ****      * |  -|  0|  9|  8|  7|  6|  5|  4|  3|  2|  1|   |   |   |Esc|
 182:keymap_custom.c ****      * |-----------------------------------------------------------|
 183:keymap_custom.c ****      * |Backs|  P|  O|  I|  U|  Y|  T|  R|  E|  W|  Q|   |   |Tab  |
 184:keymap_custom.c ****      * |-----------------------------------------------------------|
 185:keymap_custom.c ****      * |Contro|  ;|  L|  K|  J|  H|  G|  F|  D|  S|  A|Con|Control |
 186:keymap_custom.c ****      * |-----------------------------------------------------------|
 187:keymap_custom.c ****      * |Shift   |  /|  .|  ,|  M|  N|  B|  V|  C|  X|  Z|Shift |   |
 188:keymap_custom.c ****      * `-----------------------------------------------------------'
 189:keymap_custom.c ****      *      |Alt |Gui  |          Fn0          |Gui  |Alt|
 190:keymap_custom.c ****      *      `--------------------------------------------'
 191:keymap_custom.c ****      */
 192:keymap_custom.c ****     KEYMAP(MINS,0,   9,   8,   7,   6,   5,   4,   3,   2,   1,   NO,  NO,  NO,  ESC, \
 193:keymap_custom.c ****            BSPC,P,   O,   I,   U,   Y,   T,   R,   E,   W,   Q,   NO,  NO,  TAB, \
 194:keymap_custom.c ****            LCTL,SCLN,L,   K,   J,   H,   G,   F,   D,   S,   A,   RCTL,RCTL, \
 195:keymap_custom.c ****            LSFT,SLSH,DOT, COMM,M,   N,   B,   V,   C,   X,   Z,   RSFT,NO, \
 196:keymap_custom.c ****                 LALT,LGUI,          TRNS,               RGUI,RALT),
 197:keymap_custom.c **** #endif
 198:keymap_custom.c **** };
 199:keymap_custom.c **** 
 200:keymap_custom.c **** 
 201:keymap_custom.c **** 
 202:keymap_custom.c **** /* id for user defined functions */
 203:keymap_custom.c **** enum function_id {
 204:keymap_custom.c ****     UP,
 205:keymap_custom.c ****     DOWN,
 206:keymap_custom.c ****     LEFT,
 207:keymap_custom.c ****     RIGHT,
 208:keymap_custom.c ****     END_WORD,
 209:keymap_custom.c ****     BEGIN_WORD,
 210:keymap_custom.c ****     END_LINE,
 211:keymap_custom.c ****     BEGIN_LINE,
 212:keymap_custom.c ****     // LSHIFT_LPAREN,
 213:keymap_custom.c **** };
 214:keymap_custom.c **** 
 215:keymap_custom.c **** enum macro_id {
 216:keymap_custom.c ****     HELLO,
 217:keymap_custom.c ****     VOLUP,
 218:keymap_custom.c ****     ALT_TAB,
 219:keymap_custom.c ****     ALT_TILDE,
 220:keymap_custom.c **** };
 221:keymap_custom.c **** 
 222:keymap_custom.c **** 
 223:keymap_custom.c **** /*
 224:keymap_custom.c ****  * Fn action definition
 225:keymap_custom.c ****  */
 226:keymap_custom.c **** #ifdef KEYMAP_SECTION_ENABLE
 227:keymap_custom.c **** const action_t fn_actions[] __attribute__ ((section (".keymap.fn_actions"))) = {
 228:keymap_custom.c **** #else
 229:keymap_custom.c **** const action_t fn_actions[] PROGMEM = {
 230:keymap_custom.c **** #endif
 231:keymap_custom.c ****     [0] = ACTION_DEFAULT_LAYER_SET(0),                // Default layer(not used)
 232:keymap_custom.c ****     [1] = ACTION_LAYER_MODS(1, MOD_LGUI),             // Cursor layer with Slash* /*KC_SLASH*/
 233:keymap_custom.c ****     [2] = ACTION_LAYER_MODS(2, MOD_LCTL),             // Cursor layer with Slash* /*KC_SLASH*/
 234:keymap_custom.c ****     // [3] = ACTION_LAYER_MOMENTARY(2),
 235:keymap_custom.c ****     [6] = ACTION_LAYER_MOMENTARY(6),                 // HHKB layer(toggle with 5 taps)
 236:keymap_custom.c ****     // [4] = ACTION_MACRO(ALT_TILDE),                    // Macro: CMD + Tilde
 237:keymap_custom.c **** 
 238:keymap_custom.c ****     [10] = ACTION_FUNCTION(LEFT),
 239:keymap_custom.c ****     [11] = ACTION_FUNCTION(DOWN),
 240:keymap_custom.c ****     [12] = ACTION_FUNCTION(UP),
 241:keymap_custom.c ****     [13] = ACTION_FUNCTION(RIGHT),
 242:keymap_custom.c **** 
 243:keymap_custom.c ****     [16] = ACTION_FUNCTION(END_WORD),
 244:keymap_custom.c ****     [17] = ACTION_FUNCTION(BEGIN_WORD),
 245:keymap_custom.c ****     [18] = ACTION_FUNCTION(END_LINE),
 246:keymap_custom.c ****     [19] = ACTION_FUNCTION(BEGIN_LINE)
 247:keymap_custom.c **** 
 248:keymap_custom.c ****     // [3] = ACTION_LAYER_TAP_KEY(3, KC_SCLN),           // Mousekey layer with Semicolon*
 249:keymap_custom.c ****     // [4] = ACTION_LAYER_TAP_KEY(4, KC_SPC),            // Mousekey layer with Space
 250:keymap_custom.c ****    //  [5] = ACTION_LAYER_MOMENTARY(4),                  // Mousekey layer(IJKL)
 251:keymap_custom.c ****    //  [6] = ACTION_MODS_TAP_KEY(MOD_RCTL, KC_ENT),      // RControl with tap Enter
 252:keymap_custom.c ****    //  [7] = ACTION_MODS_ONESHOT(MOD_LSFT),              // Oneshot Shift
 253:keymap_custom.c ****    //  [8] = ACTION_MACRO(ALT_TAB),                      // Application switching
 254:keymap_custom.c ****    //  [9] = ACTION_MODS_KEY(MOD_LALT, KC_LEFT),
 255:keymap_custom.c ****    // [10] = ACTION_MODS_KEY(MOD_LALT, KC_RIGHT),
 256:keymap_custom.c **** 
 257:keymap_custom.c **** //  [x] = ACTION_LMOD_TAP_KEY(KC_LCTL, KC_BSPC),        // LControl with tap Backspace
 258:keymap_custom.c **** //  [x] = ACTION_LMOD_TAP_KEY(KC_LCTL, KC_ESC),         // LControl with tap Esc
 259:keymap_custom.c **** //  [x] = ACTION_FUNCTION_TAP(LSHIFT_LPAREN),           // Function: LShift with tap '('
 260:keymap_custom.c ****  // [x] = ACTION_MACRO(HELLO),                          // Macro: say hello
 261:keymap_custom.c **** //  [x] = ACTION_MACRO(VOLUP),                          // Macro: media key
 262:keymap_custom.c **** };
 263:keymap_custom.c **** 
 264:keymap_custom.c **** 
 265:keymap_custom.c **** /*
 266:keymap_custom.c ****  * Macro definition
 267:keymap_custom.c ****  */
 268:keymap_custom.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 269:keymap_custom.c **** {
  16               		.loc 1 269 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23 0000 FC01      		movw r30,r24
 270:keymap_custom.c ****     switch (id) {
  24               		.loc 1 270 0
  25 0002 6130      		cpi r22,lo8(1)
  26 0004 01F0      		breq .L3
  27 0006 00F0      		brlo .L4
  28 0008 6230      		cpi r22,lo8(2)
  29 000a 01F0      		breq .L5
  30 000c 6330      		cpi r22,lo8(3)
  31 000e 01F0      		breq .L6
  32 0010 00C0      		rjmp .L9
  33               	.L4:
 271:keymap_custom.c ****         case HELLO:
 272:keymap_custom.c ****             return (record->event.pressed ?
 273:keymap_custom.c ****                     MACRO( I(0), T(H), T(E), T(L), T(L), W(255), T(O), END ) :
  34               		.loc 1 273 0
  35 0012 8281      		ldd r24,Z+2
  36               	.LVL1:
  37 0014 8823      		tst r24
  38 0016 01F0      		breq .L9
  39 0018 80E0      		ldi r24,lo8(__m.2317)
  40 001a 90E0      		ldi r25,hi8(__m.2317)
  41 001c 0895      		ret
  42               	.LVL2:
  43               	.L3:
 274:keymap_custom.c ****                     MACRO_NONE );
 275:keymap_custom.c ****         case VOLUP:
 276:keymap_custom.c ****             return (record->event.pressed ?
 277:keymap_custom.c ****                     MACRO( D(VOLU), U(VOLU), END ) :
  44               		.loc 1 277 0
  45 001e 8281      		ldd r24,Z+2
  46               	.LVL3:
  47 0020 8823      		tst r24
  48 0022 01F0      		breq .L9
  49 0024 80E0      		ldi r24,lo8(__m.2320)
  50 0026 90E0      		ldi r25,hi8(__m.2320)
  51 0028 0895      		ret
  52               	.LVL4:
  53               	.L5:
 278:keymap_custom.c ****                     MACRO_NONE );
 279:keymap_custom.c ****         case ALT_TAB:
 280:keymap_custom.c ****             return (record->event.pressed ?
 281:keymap_custom.c ****                     MACRO( D(LALT), D(TAB), END ) :
  54               		.loc 1 281 0
  55 002a 8281      		ldd r24,Z+2
  56               	.LVL5:
  57 002c 8823      		tst r24
  58 002e 01F0      		breq .L10
  59 0030 80E0      		ldi r24,lo8(__m.2323)
  60 0032 90E0      		ldi r25,hi8(__m.2323)
  61 0034 0895      		ret
  62               	.LVL6:
  63               	.L6:
 282:keymap_custom.c ****                     MACRO( U(TAB), END ));
 283:keymap_custom.c ****         case ALT_TILDE:
 284:keymap_custom.c ****             return (record->event.pressed ?
 285:keymap_custom.c ****                     MACRO( D(LGUI), D(GRV), END ) :
  64               		.loc 1 285 0
  65 0036 8281      		ldd r24,Z+2
  66               	.LVL7:
  67 0038 8823      		tst r24
  68 003a 01F0      		breq .L11
  69 003c 80E0      		ldi r24,lo8(__m.2328)
  70 003e 90E0      		ldi r25,hi8(__m.2328)
  71 0040 0895      		ret
  72               	.L9:
 273:keymap_custom.c ****                     MACRO( I(0), T(H), T(E), T(L), T(L), W(255), T(O), END ) :
  73               		.loc 1 273 0
  74 0042 80E0      		ldi r24,0
  75 0044 90E0      		ldi r25,0
  76 0046 0895      		ret
  77               	.L10:
 281:keymap_custom.c ****                     MACRO( D(LALT), D(TAB), END ) :
  78               		.loc 1 281 0
  79 0048 80E0      		ldi r24,lo8(__m.2325)
  80 004a 90E0      		ldi r25,hi8(__m.2325)
  81 004c 0895      		ret
  82               	.L11:
  83               		.loc 1 285 0
  84 004e 80E0      		ldi r24,lo8(__m.2330)
  85 0050 90E0      		ldi r25,hi8(__m.2330)
 286:keymap_custom.c ****                     MACRO( U(GRV), END ));
 287:keymap_custom.c ****     }
 288:keymap_custom.c ****     return MACRO_NONE;
 289:keymap_custom.c **** }
  86               		.loc 1 289 0
  87 0052 0895      		ret
  88               		.cfi_endproc
  89               	.LFE4:
  91               		.section	.text.action_function,"ax",@progbits
  92               	.global	action_function
  94               	action_function:
  95               	.LFB5:
 290:keymap_custom.c **** 
 291:keymap_custom.c **** 
 292:keymap_custom.c **** 
 293:keymap_custom.c **** /*
 294:keymap_custom.c ****  * user defined action function
 295:keymap_custom.c ****  */
 296:keymap_custom.c **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
 297:keymap_custom.c **** {
  96               		.loc 1 297 0
  97               		.cfi_startproc
  98               	.LVL8:
  99 0000 CF93      		push r28
 100               	.LCFI0:
 101               		.cfi_def_cfa_offset 3
 102               		.cfi_offset 28, -2
 103 0002 DF93      		push r29
 104               	.LCFI1:
 105               		.cfi_def_cfa_offset 4
 106               		.cfi_offset 29, -3
 107               	/* prologue: function */
 108               	/* frame size = 0 */
 109               	/* stack size = 2 */
 110               	.L__stack_usage = 2
 111 0004 EC01      		movw r28,r24
 298:keymap_custom.c **** // #   define MODS_GUI_MASK   (MOD_BIT(KC_LGUI)|MOD_BIT(KC_RGUI))
 299:keymap_custom.c **** // #   define MODS_ALT_MASK   (MOD_BIT(KC_LALT)|MOD_BIT(KC_RALT))
 300:keymap_custom.c **** #   define MODS_CTRL_MASK   (MOD_BIT(KC_LCTRL)|MOD_BIT(KC_RCTRL))
 301:keymap_custom.c **** // #   define MODS_SFT_MASK   (MOD_BIT(KC_LSFT)|MOD_BIT(KC_RSFT))
 302:keymap_custom.c ****     // static uint8_t gui_mod;
 303:keymap_custom.c ****     // static uint8_t alt_mod;
 304:keymap_custom.c ****     static uint8_t ctrl_mod;
 305:keymap_custom.c ****     // static uint8_t sft_mod;
 306:keymap_custom.c ****     // if (record->event.pressed) dprint("P"); else dprint("R");
 307:keymap_custom.c ****     // dprintf("%d", record->tap.count);
 308:keymap_custom.c ****     // if (record->tap.interrupted) dprint("i");
 309:keymap_custom.c ****     // dprint("\n");
 310:keymap_custom.c **** 
 311:keymap_custom.c ****     switch (id) {
 112               		.loc 1 311 0
 113 0006 462F      		mov r20,r22
 114               	.LVL9:
 115 0008 50E0      		ldi r21,0
 116 000a 4830      		cpi r20,8
 117 000c 5105      		cpc r21,__zero_reg__
 118 000e 00F0      		brlo .+2
 119 0010 00C0      		rjmp .L14
 120 0012 FA01      		movw r30,r20
 121 0014 E050      		subi r30,lo8(-(gs(.L17)))
 122 0016 F040      		sbci r31,hi8(-(gs(.L17)))
 123 0018 0C94 0000 		jmp __tablejump2__
 124               	.LVL10:
 125               		.section	.progmem.gcc_sw_table.action_function,"a",@progbits
 126               		.p2align	1
 127               	.L17:
 128 0000 0000      		.word gs(.L16)
 129 0002 0000      		.word gs(.L18)
 130 0004 0000      		.word gs(.L19)
 131 0006 0000      		.word gs(.L20)
 132 0008 0000      		.word gs(.L21)
 133 000a 0000      		.word gs(.L22)
 134 000c 0000      		.word gs(.L23)
 135 000e 0000      		.word gs(.L24)
 136               		.section	.text.action_function
 137               	.L16:
 312:keymap_custom.c ****         case UP:
 313:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 138               		.loc 1 313 0
 139 001c 0E94 0000 		call get_mods
 140               	.LVL11:
 141 0020 8171      		andi r24,lo8(17)
 142 0022 8093 0000 		sts ctrl_mod.2337,r24
 314:keymap_custom.c ****             if(record->event.pressed) {
 143               		.loc 1 314 0
 144 0026 9A81      		ldd r25,Y+2
 145 0028 9923      		tst r25
 146 002a 01F0      		breq .L25
 315:keymap_custom.c ****                 del_mods(ctrl_mod);
 147               		.loc 1 315 0
 148 002c 0E94 0000 		call del_mods
 149               	.LVL12:
 316:keymap_custom.c ****                 add_key(KC_UP);
 150               		.loc 1 316 0
 151 0030 82E5      		ldi r24,lo8(82)
 152 0032 00C0      		rjmp .L33
 153               	.L25:
 317:keymap_custom.c ****                 send_keyboard_report();
 318:keymap_custom.c ****                 add_mods(ctrl_mod);
 319:keymap_custom.c ****             } else {
 320:keymap_custom.c ****                 del_key(KC_UP);
 154               		.loc 1 320 0
 155 0034 82E5      		ldi r24,lo8(82)
 156 0036 00C0      		rjmp .L34
 157               	.LVL13:
 158               	.L18:
 321:keymap_custom.c ****                 register_mods(ctrl_mod);
 322:keymap_custom.c ****                 send_keyboard_report();
 323:keymap_custom.c ****             }
 324:keymap_custom.c ****             return;
 325:keymap_custom.c **** 
 326:keymap_custom.c ****         case DOWN:
 327:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 159               		.loc 1 327 0
 160 0038 0E94 0000 		call get_mods
 161               	.LVL14:
 162 003c 8171      		andi r24,lo8(17)
 163 003e 8093 0000 		sts ctrl_mod.2337,r24
 328:keymap_custom.c ****             if(record->event.pressed) {
 164               		.loc 1 328 0
 165 0042 9A81      		ldd r25,Y+2
 166 0044 9923      		tst r25
 167 0046 01F0      		breq .L26
 329:keymap_custom.c ****                 del_mods(ctrl_mod);
 168               		.loc 1 329 0
 169 0048 0E94 0000 		call del_mods
 170               	.LVL15:
 330:keymap_custom.c ****                 add_key(KC_DOWN);
 171               		.loc 1 330 0
 172 004c 81E5      		ldi r24,lo8(81)
 173               	.L33:
 174 004e 0E94 0000 		call add_key
 175               	.LVL16:
 331:keymap_custom.c ****                 send_keyboard_report();
 176               		.loc 1 331 0
 177 0052 0E94 0000 		call send_keyboard_report
 178               	.LVL17:
 179               	.L35:
 332:keymap_custom.c ****                 add_mods(ctrl_mod);
 180               		.loc 1 332 0
 181 0056 8091 0000 		lds r24,ctrl_mod.2337
 182               	/* epilogue start */
 333:keymap_custom.c ****             } else {
 334:keymap_custom.c ****                 del_key(KC_DOWN);
 335:keymap_custom.c ****                 register_mods(ctrl_mod);
 336:keymap_custom.c ****                 send_keyboard_report();
 337:keymap_custom.c ****             }
 338:keymap_custom.c ****             return;
 339:keymap_custom.c **** 
 340:keymap_custom.c ****         case LEFT:
 341:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 342:keymap_custom.c ****             if(record->event.pressed) {
 343:keymap_custom.c ****                 del_mods(ctrl_mod);
 344:keymap_custom.c ****                 add_key(KC_LEFT);
 345:keymap_custom.c ****                 send_keyboard_report();
 346:keymap_custom.c ****                 add_mods(ctrl_mod);
 347:keymap_custom.c ****             } else {
 348:keymap_custom.c ****                 del_key(KC_LEFT);
 349:keymap_custom.c ****                 register_mods(ctrl_mod);
 350:keymap_custom.c ****                 send_keyboard_report();
 351:keymap_custom.c ****             }
 352:keymap_custom.c ****             return;
 353:keymap_custom.c **** 
 354:keymap_custom.c ****         case RIGHT:
 355:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 356:keymap_custom.c ****             if(record->event.pressed) {
 357:keymap_custom.c ****                 del_mods(ctrl_mod);
 358:keymap_custom.c ****                 add_key(KC_RIGHT);
 359:keymap_custom.c ****                 send_keyboard_report();
 360:keymap_custom.c ****                 add_mods(ctrl_mod);
 361:keymap_custom.c ****             } else {
 362:keymap_custom.c ****                 del_key(KC_RIGHT);
 363:keymap_custom.c ****                 register_mods(ctrl_mod);
 364:keymap_custom.c ****                 send_keyboard_report();
 365:keymap_custom.c ****             }
 366:keymap_custom.c ****             return;
 367:keymap_custom.c **** 
 368:keymap_custom.c ****         case END_WORD:
 369:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 370:keymap_custom.c ****             if(record->event.pressed) {
 371:keymap_custom.c ****                 del_mods(ctrl_mod);
 372:keymap_custom.c ****                 add_weak_mods(MOD_BIT(KC_LALT));
 373:keymap_custom.c ****                 add_key(KC_RIGHT);
 374:keymap_custom.c ****                 send_keyboard_report();
 375:keymap_custom.c ****                 del_weak_mods(MOD_BIT(KC_LALT));
 376:keymap_custom.c ****                 add_mods(ctrl_mod);
 377:keymap_custom.c ****             } else {
 378:keymap_custom.c ****                 del_key(KC_RIGHT);
 379:keymap_custom.c ****                 register_mods(ctrl_mod);
 380:keymap_custom.c ****                 send_keyboard_report();
 381:keymap_custom.c ****             }
 382:keymap_custom.c **** 
 383:keymap_custom.c ****             return;
 384:keymap_custom.c ****         case BEGIN_WORD:
 385:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 386:keymap_custom.c ****             if(record->event.pressed) {
 387:keymap_custom.c ****                 del_mods(ctrl_mod);
 388:keymap_custom.c ****                 add_weak_mods(MOD_BIT(KC_LALT));
 389:keymap_custom.c ****                 add_key(KC_LEFT);
 390:keymap_custom.c ****                 send_keyboard_report();
 391:keymap_custom.c ****                 del_weak_mods(MOD_BIT(KC_LALT));
 392:keymap_custom.c ****                 add_mods(ctrl_mod);
 393:keymap_custom.c ****             } else {
 394:keymap_custom.c ****                 del_key(KC_LEFT);
 395:keymap_custom.c ****                 register_mods(ctrl_mod);
 396:keymap_custom.c ****                 send_keyboard_report();
 397:keymap_custom.c ****             }
 398:keymap_custom.c **** 
 399:keymap_custom.c ****             return;
 400:keymap_custom.c ****         case END_LINE:
 401:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 402:keymap_custom.c ****             if(record->event.pressed) {
 403:keymap_custom.c ****                 del_mods(ctrl_mod);
 404:keymap_custom.c ****                 add_weak_mods(MOD_BIT(KC_LGUI));
 405:keymap_custom.c ****                 add_key(KC_RIGHT);
 406:keymap_custom.c ****                 send_keyboard_report();
 407:keymap_custom.c ****                 del_weak_mods(MOD_BIT(KC_LGUI));
 408:keymap_custom.c ****                 add_mods(ctrl_mod);
 409:keymap_custom.c ****             } else {
 410:keymap_custom.c ****                 del_key(KC_RIGHT);
 411:keymap_custom.c ****                 register_mods(ctrl_mod);
 412:keymap_custom.c ****                 send_keyboard_report();
 413:keymap_custom.c ****             }
 414:keymap_custom.c **** 
 415:keymap_custom.c ****             return;
 416:keymap_custom.c ****         case BEGIN_LINE:
 417:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 418:keymap_custom.c ****             if(record->event.pressed) {
 419:keymap_custom.c ****                 del_mods(ctrl_mod);
 420:keymap_custom.c ****                 add_weak_mods(MOD_BIT(KC_LGUI));
 421:keymap_custom.c ****                 add_key(KC_LEFT);
 422:keymap_custom.c ****                 send_keyboard_report();
 423:keymap_custom.c ****                 del_weak_mods(MOD_BIT(KC_LGUI));
 424:keymap_custom.c ****                 add_mods(ctrl_mod);
 425:keymap_custom.c ****             } else {
 426:keymap_custom.c ****                 del_key(KC_LEFT);
 427:keymap_custom.c ****                 register_mods(ctrl_mod);
 428:keymap_custom.c ****                 send_keyboard_report();
 429:keymap_custom.c ****             }
 430:keymap_custom.c ****             return;
 431:keymap_custom.c **** 
 432:keymap_custom.c ****         // case LSHIFT_LPAREN:
 433:keymap_custom.c ****         //     // Shift parentheses example: LShft + tap '('
 434:keymap_custom.c ****         //     // http://stevelosh.com/blog/2012/10/a-modern-space-cadet/#shift-parentheses
 435:keymap_custom.c ****         //     // http://geekhack.org/index.php?topic=41989.msg1304899#msg1304899
 436:keymap_custom.c ****         //     if (record->event.pressed) {
 437:keymap_custom.c ****         //         if (record->tap.count > 0 && !record->tap.interrupted) {
 438:keymap_custom.c ****         //             if (record->tap.interrupted) {
 439:keymap_custom.c ****         //                 dprint("tap interrupted\n");
 440:keymap_custom.c ****         //                 register_mods(MOD_BIT(KC_LSHIFT));
 441:keymap_custom.c ****         //             }
 442:keymap_custom.c ****         //         } else {
 443:keymap_custom.c ****         //             register_mods(MOD_BIT(KC_LSHIFT));
 444:keymap_custom.c ****         //         }
 445:keymap_custom.c ****         //     } else {
 446:keymap_custom.c ****         //         if (record->tap.count > 0 && !(record->tap.interrupted)) {
 447:keymap_custom.c ****         //             add_weak_mods(MOD_BIT(KC_LSHIFT));
 448:keymap_custom.c ****         //             send_keyboard_report();
 449:keymap_custom.c ****         //             register_code(KC_9);
 450:keymap_custom.c ****         //             unregister_code(KC_9);
 451:keymap_custom.c ****         //             del_weak_mods(MOD_BIT(KC_LSHIFT));
 452:keymap_custom.c ****         //             send_keyboard_report();
 453:keymap_custom.c ****         //             record->tap.count = 0;  // ad hoc: cancel tap
 454:keymap_custom.c ****         //         } else {
 455:keymap_custom.c ****         //             unregister_mods(MOD_BIT(KC_LSHIFT));
 456:keymap_custom.c ****         //         }
 457:keymap_custom.c ****         //     }
 458:keymap_custom.c ****         //     break;
 459:keymap_custom.c ****     }
 460:keymap_custom.c **** }
 183               		.loc 1 460 0
 184 005a DF91      		pop r29
 185 005c CF91      		pop r28
 186               	.LVL18:
 332:keymap_custom.c ****                 add_mods(ctrl_mod);
 187               		.loc 1 332 0
 188 005e 0C94 0000 		jmp add_mods
 189               	.LVL19:
 190               	.L26:
 334:keymap_custom.c ****                 del_key(KC_DOWN);
 191               		.loc 1 334 0
 192 0062 81E5      		ldi r24,lo8(81)
 193 0064 00C0      		rjmp .L34
 194               	.LVL20:
 195               	.L19:
 341:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 196               		.loc 1 341 0
 197 0066 0E94 0000 		call get_mods
 198               	.LVL21:
 199 006a 8171      		andi r24,lo8(17)
 200 006c 8093 0000 		sts ctrl_mod.2337,r24
 342:keymap_custom.c ****             if(record->event.pressed) {
 201               		.loc 1 342 0
 202 0070 9A81      		ldd r25,Y+2
 203 0072 9923      		tst r25
 204 0074 01F4      		brne .+2
 205 0076 00C0      		rjmp .L32
 343:keymap_custom.c ****                 del_mods(ctrl_mod);
 206               		.loc 1 343 0
 207 0078 0E94 0000 		call del_mods
 208               	.LVL22:
 344:keymap_custom.c ****                 add_key(KC_LEFT);
 209               		.loc 1 344 0
 210 007c 80E5      		ldi r24,lo8(80)
 211 007e 00C0      		rjmp .L33
 212               	.LVL23:
 213               	.L20:
 355:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 214               		.loc 1 355 0
 215 0080 0E94 0000 		call get_mods
 216               	.LVL24:
 217 0084 8171      		andi r24,lo8(17)
 218 0086 8093 0000 		sts ctrl_mod.2337,r24
 356:keymap_custom.c ****             if(record->event.pressed) {
 219               		.loc 1 356 0
 220 008a 9A81      		ldd r25,Y+2
 221 008c 9923      		tst r25
 222 008e 01F0      		breq .L31
 357:keymap_custom.c ****                 del_mods(ctrl_mod);
 223               		.loc 1 357 0
 224 0090 0E94 0000 		call del_mods
 225               	.LVL25:
 358:keymap_custom.c ****                 add_key(KC_RIGHT);
 226               		.loc 1 358 0
 227 0094 8FE4      		ldi r24,lo8(79)
 228 0096 00C0      		rjmp .L33
 229               	.LVL26:
 230               	.L21:
 369:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 231               		.loc 1 369 0
 232 0098 0E94 0000 		call get_mods
 233               	.LVL27:
 234 009c 8171      		andi r24,lo8(17)
 235 009e 8093 0000 		sts ctrl_mod.2337,r24
 370:keymap_custom.c ****             if(record->event.pressed) {
 236               		.loc 1 370 0
 237 00a2 9A81      		ldd r25,Y+2
 238 00a4 9923      		tst r25
 239 00a6 01F0      		breq .L31
 371:keymap_custom.c ****                 del_mods(ctrl_mod);
 240               		.loc 1 371 0
 241 00a8 0E94 0000 		call del_mods
 242               	.LVL28:
 372:keymap_custom.c ****                 add_weak_mods(MOD_BIT(KC_LALT));
 243               		.loc 1 372 0
 244 00ac 84E0      		ldi r24,lo8(4)
 245 00ae 0E94 0000 		call add_weak_mods
 246               	.LVL29:
 373:keymap_custom.c ****                 add_key(KC_RIGHT);
 247               		.loc 1 373 0
 248 00b2 8FE4      		ldi r24,lo8(79)
 249 00b4 00C0      		rjmp .L38
 250               	.LVL30:
 251               	.L22:
 385:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 252               		.loc 1 385 0
 253 00b6 0E94 0000 		call get_mods
 254               	.LVL31:
 255 00ba 8171      		andi r24,lo8(17)
 256 00bc 8093 0000 		sts ctrl_mod.2337,r24
 386:keymap_custom.c ****             if(record->event.pressed) {
 257               		.loc 1 386 0
 258 00c0 9A81      		ldd r25,Y+2
 259 00c2 9923      		tst r25
 260 00c4 01F0      		breq .L32
 387:keymap_custom.c ****                 del_mods(ctrl_mod);
 261               		.loc 1 387 0
 262 00c6 0E94 0000 		call del_mods
 263               	.LVL32:
 388:keymap_custom.c ****                 add_weak_mods(MOD_BIT(KC_LALT));
 264               		.loc 1 388 0
 265 00ca 84E0      		ldi r24,lo8(4)
 266 00cc 0E94 0000 		call add_weak_mods
 267               	.LVL33:
 389:keymap_custom.c ****                 add_key(KC_LEFT);
 268               		.loc 1 389 0
 269 00d0 80E5      		ldi r24,lo8(80)
 270               	.L38:
 271 00d2 0E94 0000 		call add_key
 272               	.LVL34:
 390:keymap_custom.c ****                 send_keyboard_report();
 273               		.loc 1 390 0
 274 00d6 0E94 0000 		call send_keyboard_report
 275               	.LVL35:
 391:keymap_custom.c ****                 del_weak_mods(MOD_BIT(KC_LALT));
 276               		.loc 1 391 0
 277 00da 84E0      		ldi r24,lo8(4)
 278 00dc 00C0      		rjmp .L37
 279               	.LVL36:
 280               	.L23:
 401:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 281               		.loc 1 401 0
 282 00de 0E94 0000 		call get_mods
 283               	.LVL37:
 284 00e2 8171      		andi r24,lo8(17)
 285 00e4 8093 0000 		sts ctrl_mod.2337,r24
 402:keymap_custom.c ****             if(record->event.pressed) {
 286               		.loc 1 402 0
 287 00e8 9A81      		ldd r25,Y+2
 288 00ea 9923      		tst r25
 289 00ec 01F0      		breq .L31
 403:keymap_custom.c ****                 del_mods(ctrl_mod);
 290               		.loc 1 403 0
 291 00ee 0E94 0000 		call del_mods
 292               	.LVL38:
 404:keymap_custom.c ****                 add_weak_mods(MOD_BIT(KC_LGUI));
 293               		.loc 1 404 0
 294 00f2 88E0      		ldi r24,lo8(8)
 295 00f4 0E94 0000 		call add_weak_mods
 296               	.LVL39:
 405:keymap_custom.c ****                 add_key(KC_RIGHT);
 297               		.loc 1 405 0
 298 00f8 8FE4      		ldi r24,lo8(79)
 299 00fa 00C0      		rjmp .L36
 300               	.L31:
 410:keymap_custom.c ****                 del_key(KC_RIGHT);
 301               		.loc 1 410 0
 302 00fc 8FE4      		ldi r24,lo8(79)
 303 00fe 00C0      		rjmp .L34
 304               	.LVL40:
 305               	.L24:
 417:keymap_custom.c ****             ctrl_mod = get_mods()&MODS_CTRL_MASK;
 306               		.loc 1 417 0
 307 0100 0E94 0000 		call get_mods
 308               	.LVL41:
 309 0104 8171      		andi r24,lo8(17)
 310 0106 8093 0000 		sts ctrl_mod.2337,r24
 418:keymap_custom.c ****             if(record->event.pressed) {
 311               		.loc 1 418 0
 312 010a 9A81      		ldd r25,Y+2
 313 010c 9923      		tst r25
 314 010e 01F0      		breq .L32
 419:keymap_custom.c ****                 del_mods(ctrl_mod);
 315               		.loc 1 419 0
 316 0110 0E94 0000 		call del_mods
 317               	.LVL42:
 420:keymap_custom.c ****                 add_weak_mods(MOD_BIT(KC_LGUI));
 318               		.loc 1 420 0
 319 0114 88E0      		ldi r24,lo8(8)
 320 0116 0E94 0000 		call add_weak_mods
 321               	.LVL43:
 421:keymap_custom.c ****                 add_key(KC_LEFT);
 322               		.loc 1 421 0
 323 011a 80E5      		ldi r24,lo8(80)
 324               	.L36:
 325 011c 0E94 0000 		call add_key
 326               	.LVL44:
 422:keymap_custom.c ****                 send_keyboard_report();
 327               		.loc 1 422 0
 328 0120 0E94 0000 		call send_keyboard_report
 329               	.LVL45:
 423:keymap_custom.c ****                 del_weak_mods(MOD_BIT(KC_LGUI));
 330               		.loc 1 423 0
 331 0124 88E0      		ldi r24,lo8(8)
 332               	.L37:
 333 0126 0E94 0000 		call del_weak_mods
 334               	.LVL46:
 335 012a 00C0      		rjmp .L35
 336               	.L32:
 426:keymap_custom.c ****                 del_key(KC_LEFT);
 337               		.loc 1 426 0
 338 012c 80E5      		ldi r24,lo8(80)
 339               	.L34:
 340 012e 0E94 0000 		call del_key
 341               	.LVL47:
 427:keymap_custom.c ****                 register_mods(ctrl_mod);
 342               		.loc 1 427 0
 343 0132 8091 0000 		lds r24,ctrl_mod.2337
 344 0136 0E94 0000 		call register_mods
 345               	.LVL48:
 346               	/* epilogue start */
 347               		.loc 1 460 0
 348 013a DF91      		pop r29
 349 013c CF91      		pop r28
 350               	.LVL49:
 428:keymap_custom.c ****                 send_keyboard_report();
 351               		.loc 1 428 0
 352 013e 0C94 0000 		jmp send_keyboard_report
 353               	.LVL50:
 354               	.L14:
 355               	/* epilogue start */
 356               		.loc 1 460 0
 357 0142 DF91      		pop r29
 358 0144 CF91      		pop r28
 359 0146 0895      		ret
 360               		.cfi_endproc
 361               	.LFE5:
 363               		.section	.bss.ctrl_mod.2337,"aw",@nobits
 366               	ctrl_mod.2337:
 367 0000 00        		.zero	1
 368               		.section	.progmem.data.__m.2330,"a",@progbits
 371               	__m.2330:
 372 0000 02        		.byte	2
 373 0001 35        		.byte	53
 374 0002 00        		.byte	0
 375               		.section	.progmem.data.__m.2328,"a",@progbits
 378               	__m.2328:
 379 0000 01        		.byte	1
 380 0001 E3        		.byte	-29
 381 0002 01        		.byte	1
 382 0003 35        		.byte	53
 383 0004 00        		.byte	0
 384               		.section	.progmem.data.__m.2325,"a",@progbits
 387               	__m.2325:
 388 0000 02        		.byte	2
 389 0001 2B        		.byte	43
 390 0002 00        		.byte	0
 391               		.section	.progmem.data.__m.2323,"a",@progbits
 394               	__m.2323:
 395 0000 01        		.byte	1
 396 0001 E2        		.byte	-30
 397 0002 01        		.byte	1
 398 0003 2B        		.byte	43
 399 0004 00        		.byte	0
 400               		.section	.progmem.data.__m.2320,"a",@progbits
 403               	__m.2320:
 404 0000 01        		.byte	1
 405 0001 A9        		.byte	-87
 406 0002 02        		.byte	2
 407 0003 A9        		.byte	-87
 408 0004 00        		.byte	0
 409               		.section	.progmem.data.__m.2317,"a",@progbits
 412               	__m.2317:
 413 0000 75        		.byte	117
 414 0001 00        		.byte	0
 415 0002 01        		.byte	1
 416 0003 0B        		.byte	11
 417 0004 02        		.byte	2
 418 0005 0B        		.byte	11
 419 0006 01        		.byte	1
 420 0007 08        		.byte	8
 421 0008 02        		.byte	2
 422 0009 08        		.byte	8
 423 000a 01        		.byte	1
 424 000b 0F        		.byte	15
 425 000c 02        		.byte	2
 426 000d 0F        		.byte	15
 427 000e 01        		.byte	1
 428 000f 0F        		.byte	15
 429 0010 02        		.byte	2
 430 0011 0F        		.byte	15
 431 0012 74        		.byte	116
 432 0013 FF        		.byte	-1
 433 0014 01        		.byte	1
 434 0015 12        		.byte	18
 435 0016 02        		.byte	2
 436 0017 12        		.byte	18
 437 0018 00        		.byte	0
 438               	.global	fn_actions
 439               		.section	.progmem.data.fn_actions,"a",@progbits
 442               	fn_actions:
 443 0000 018C      		.word	-29695
 444 0002 C8A1      		.word	-24120
 445 0004 C1A2      		.word	-23871
 446 0006 0000 0000 		.zero	6
 446      0000 
 447 000c F1A6      		.word	-22799
 448 000e 0000 0000 		.zero	6
 448      0000 
 449 0014 02F0      		.word	-4094
 450 0016 01F0      		.word	-4095
 451 0018 00F0      		.word	-4096
 452 001a 03F0      		.word	-4093
 453 001c 0000 0000 		.zero	4
 454 0020 04F0      		.word	-4092
 455 0022 05F0      		.word	-4091
 456 0024 06F0      		.word	-4090
 457 0026 07F0      		.word	-4089
 458               	.global	keymaps
 459               		.section	.progmem.data.keymaps,"a",@progbits
 462               	keymaps:
 463 0000 1F        		.byte	31
 464 0001 14        		.byte	20
 465 0002 1A        		.byte	26
 466 0003 16        		.byte	22
 467 0004 04        		.byte	4
 468 0005 1D        		.byte	29
 469 0006 1B        		.byte	27
 470 0007 06        		.byte	6
 471 0008 20        		.byte	32
 472 0009 21        		.byte	33
 473 000a 15        		.byte	21
 474 000b 08        		.byte	8
 475 000c 07        		.byte	7
 476 000d 09        		.byte	9
 477 000e 19        		.byte	25
 478 000f 05        		.byte	5
 479 0010 22        		.byte	34
 480 0011 23        		.byte	35
 481 0012 1C        		.byte	28
 482 0013 17        		.byte	23
 483 0014 0A        		.byte	10
 484 0015 0B        		.byte	11
 485 0016 11        		.byte	17
 486 0017 00        		.byte	0
 487 0018 1E        		.byte	30
 488 0019 29        		.byte	41
 489 001a 2B        		.byte	43
 490 001b C2        		.byte	-62
 491 001c E1        		.byte	-31
 492 001d E2        		.byte	-30
 493 001e C1        		.byte	-63
 494 001f 2C        		.byte	44
 495 0020 24        		.byte	36
 496 0021 25        		.byte	37
 497 0022 18        		.byte	24
 498 0023 0C        		.byte	12
 499 0024 0E        		.byte	14
 500 0025 0D        		.byte	13
 501 0026 10        		.byte	16
 502 0027 00        		.byte	0
 503 0028 31        		.byte	49
 504 0029 35        		.byte	53
 505 002a 2A        		.byte	42
 506 002b 28        		.byte	40
 507 002c C6        		.byte	-58
 508 002d E5        		.byte	-27
 509 002e E6        		.byte	-26
 510 002f E7        		.byte	-25
 511 0030 26        		.byte	38
 512 0031 27        		.byte	39
 513 0032 12        		.byte	18
 514 0033 13        		.byte	19
 515 0034 33        		.byte	51
 516 0035 0F        		.byte	15
 517 0036 36        		.byte	54
 518 0037 00        		.byte	0
 519 0038 2D        		.byte	45
 520 0039 2E        		.byte	46
 521 003a 30        		.byte	48
 522 003b 2F        		.byte	47
 523 003c 34        		.byte	52
 524 003d 38        		.byte	56
 525 003e 37        		.byte	55
 526 003f 00        		.byte	0
 527 0040 1F        		.byte	31
 528 0041 14        		.byte	20
 529 0042 1A        		.byte	26
 530 0043 16        		.byte	22
 531 0044 04        		.byte	4
 532 0045 1D        		.byte	29
 533 0046 1B        		.byte	27
 534 0047 06        		.byte	6
 535 0048 20        		.byte	32
 536 0049 21        		.byte	33
 537 004a 15        		.byte	21
 538 004b 08        		.byte	8
 539 004c 07        		.byte	7
 540 004d 09        		.byte	9
 541 004e 19        		.byte	25
 542 004f 05        		.byte	5
 543 0050 22        		.byte	34
 544 0051 23        		.byte	35
 545 0052 1C        		.byte	28
 546 0053 17        		.byte	23
 547 0054 0A        		.byte	10
 548 0055 0B        		.byte	11
 549 0056 11        		.byte	17
 550 0057 00        		.byte	0
 551 0058 1E        		.byte	30
 552 0059 35        		.byte	53
 553 005a 2B        		.byte	43
 554 005b E0        		.byte	-32
 555 005c E1        		.byte	-31
 556 005d E2        		.byte	-30
 557 005e 01        		.byte	1
 558 005f 2C        		.byte	44
 559 0060 24        		.byte	36
 560 0061 25        		.byte	37
 561 0062 18        		.byte	24
 562 0063 0C        		.byte	12
 563 0064 0E        		.byte	14
 564 0065 0D        		.byte	13
 565 0066 10        		.byte	16
 566 0067 00        		.byte	0
 567 0068 31        		.byte	49
 568 0069 35        		.byte	53
 569 006a 2A        		.byte	42
 570 006b 28        		.byte	40
 571 006c 01        		.byte	1
 572 006d E5        		.byte	-27
 573 006e E6        		.byte	-26
 574 006f E7        		.byte	-25
 575 0070 26        		.byte	38
 576 0071 27        		.byte	39
 577 0072 12        		.byte	18
 578 0073 13        		.byte	19
 579 0074 33        		.byte	51
 580 0075 0F        		.byte	15
 581 0076 36        		.byte	54
 582 0077 00        		.byte	0
 583 0078 2D        		.byte	45
 584 0079 2E        		.byte	46
 585 007a 30        		.byte	48
 586 007b 2F        		.byte	47
 587 007c 34        		.byte	52
 588 007d 38        		.byte	56
 589 007e 37        		.byte	55
 590 007f 00        		.byte	0
 591 0080 01        		.byte	1
 592 0081 01        		.byte	1
 593 0082 01        		.byte	1
 594 0083 01        		.byte	1
 595 0084 01        		.byte	1
 596 0085 01        		.byte	1
 597 0086 01        		.byte	1
 598 0087 01        		.byte	1
 599 0088 01        		.byte	1
 600 0089 D2        		.byte	-46
 601 008a 01        		.byte	1
 602 008b D0        		.byte	-48
 603 008c 01        		.byte	1
 604 008d 01        		.byte	1
 605 008e 01        		.byte	1
 606 008f D1        		.byte	-47
 607 0090 01        		.byte	1
 608 0091 D3        		.byte	-45
 609 0092 01        		.byte	1
 610 0093 01        		.byte	1
 611 0094 01        		.byte	1
 612 0095 CA        		.byte	-54
 613 0096 01        		.byte	1
 614 0097 00        		.byte	0
 615 0098 01        		.byte	1
 616 0099 29        		.byte	41
 617 009a 2B        		.byte	43
 618 009b 01        		.byte	1
 619 009c E1        		.byte	-31
 620 009d E2        		.byte	-30
 621 009e E3        		.byte	-29
 622 009f 2C        		.byte	44
 623 00a0 01        		.byte	1
 624 00a1 01        		.byte	1
 625 00a2 01        		.byte	1
 626 00a3 01        		.byte	1
 627 00a4 CC        		.byte	-52
 628 00a5 CB        		.byte	-53
 629 00a6 01        		.byte	1
 630 00a7 00        		.byte	0
 631 00a8 49        		.byte	73
 632 00a9 4C        		.byte	76
 633 00aa 2A        		.byte	42
 634 00ab 01        		.byte	1
 635 00ac 01        		.byte	1
 636 00ad E5        		.byte	-27
 637 00ae E6        		.byte	-26
 638 00af E7        		.byte	-25
 639 00b0 01        		.byte	1
 640 00b1 01        		.byte	1
 641 00b2 01        		.byte	1
 642 00b3 01        		.byte	1
 643 00b4 01        		.byte	1
 644 00b5 CD        		.byte	-51
 645 00b6 01        		.byte	1
 646 00b7 00        		.byte	0
 647 00b8 01        		.byte	1
 648 00b9 01        		.byte	1
 649 00ba 01        		.byte	1
 650 00bb 01        		.byte	1
 651 00bc 01        		.byte	1
 652 00bd 01        		.byte	1
 653 00be 01        		.byte	1
 654 00bf 00        		.byte	0
 655 00c0 0000 0000 		.zero	192
 655      0000 0000 
 655      0000 0000 
 655      0000 0000 
 655      0000 0000 
 656 0180 3B        		.byte	59
 657 0181 00        		.byte	0
 658 0182 00        		.byte	0
 659 0183 A9        		.byte	-87
 660 0184 AA        		.byte	-86
 661 0185 00        		.byte	0
 662 0186 00        		.byte	0
 663 0187 00        		.byte	0
 664 0188 3C        		.byte	60
 665 0189 3D        		.byte	61
 666 018a 00        		.byte	0
 667 018b 00        		.byte	0
 668 018c A8        		.byte	-88
 669 018d 00        		.byte	0
 670 018e 00        		.byte	0
 671 018f 00        		.byte	0
 672 0190 3E        		.byte	62
 673 0191 3F        		.byte	63
 674 0192 00        		.byte	0
 675 0193 00        		.byte	0
 676 0194 00        		.byte	0
 677 0195 55        		.byte	85
 678 0196 57        		.byte	87
 679 0197 00        		.byte	0
 680 0198 3A        		.byte	58
 681 0199 A5        		.byte	-91
 682 019a 39        		.byte	57
 683 019b E0        		.byte	-32
 684 019c E1        		.byte	-31
 685 019d E2        		.byte	-30
 686 019e E3        		.byte	-29
 687 019f 01        		.byte	1
 688 01a0 40        		.byte	64
 689 01a1 41        		.byte	65
 690 01a2 00        		.byte	0
 691 01a3 46        		.byte	70
 692 01a4 4A        		.byte	74
 693 01a5 54        		.byte	84
 694 01a6 56        		.byte	86
 695 01a7 00        		.byte	0
 696 01a8 49        		.byte	73
 697 01a9 4C        		.byte	76
 698 01aa 2A        		.byte	42
 699 01ab 28        		.byte	40
 700 01ac 01        		.byte	1
 701 01ad E5        		.byte	-27
 702 01ae E6        		.byte	-26
 703 01af E7        		.byte	-25
 704 01b0 42        		.byte	66
 705 01b1 43        		.byte	67
 706 01b2 47        		.byte	71
 707 01b3 48        		.byte	72
 708 01b4 50        		.byte	80
 709 01b5 4B        		.byte	75
 710 01b6 4D        		.byte	77
 711 01b7 00        		.byte	0
 712 01b8 44        		.byte	68
 713 01b9 45        		.byte	69
 714 01ba C4        		.byte	-60
 715 01bb 52        		.byte	82
 716 01bc 4F        		.byte	79
 717 01bd 51        		.byte	81
 718 01be 4E        		.byte	78
 719 01bf 00        		.byte	0
 720               		.text
 721               	.Letext0:
 722               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 723               		.file 3 "./tmk_core/common/keycode.h"
 724               		.file 4 "./tmk_core/common/keyboard.h"
 725               		.file 5 "./tmk_core/common/action_code.h"
 726               		.file 6 "./tmk_core/common/action_macro.h"
 727               		.file 7 "./tmk_core/common/action.h"
 728               		.file 8 "./tmk_core/common/action_util.h"
DEFINED SYMBOLS
                            *ABS*:00000000 keymap_custom.c
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:2      *ABS*:0000003e __SP_H__
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:3      *ABS*:0000003d __SP_L__
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:4      *ABS*:0000003f __SREG__
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:6      *ABS*:00000001 __zero_reg__
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:13     .text.action_get_macro:00000000 action_get_macro
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:412    .progmem.data.__m.2317:00000000 __m.2317
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:403    .progmem.data.__m.2320:00000000 __m.2320
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:394    .progmem.data.__m.2323:00000000 __m.2323
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:378    .progmem.data.__m.2328:00000000 __m.2328
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:387    .progmem.data.__m.2325:00000000 __m.2325
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:371    .progmem.data.__m.2330:00000000 __m.2330
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:94     .text.action_function:00000000 action_function
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:366    .bss.ctrl_mod.2337:00000000 ctrl_mod.2337
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:442    .progmem.data.fn_actions:00000000 fn_actions
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccmPVrbN.s:462    .progmem.data.keymaps:00000000 keymaps

UNDEFINED SYMBOLS
__tablejump2__
get_mods
del_mods
add_key
send_keyboard_report
add_mods
add_weak_mods
del_weak_mods
del_key
register_mods
__do_clear_bss
