   1               		.file	"descriptor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
  11               	.global	CALLBACK_USB_GetDescriptor
  13               	CALLBACK_USB_GetDescriptor:
  14               	.LFB100:
  15               		.file 1 "./tmk_core/protocol/lufa/descriptor.c"
   1:./tmk_core/protocol/lufa/descriptor.c **** /* 
   2:./tmk_core/protocol/lufa/descriptor.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/protocol/lufa/descriptor.c ****  * This file is based on:
   4:./tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:./tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:./tmk_core/protocol/lufa/descriptor.c ****  */
   7:./tmk_core/protocol/lufa/descriptor.c **** 
   8:./tmk_core/protocol/lufa/descriptor.c **** /*
   9:./tmk_core/protocol/lufa/descriptor.c ****              LUFA Library
  10:./tmk_core/protocol/lufa/descriptor.c ****      Copyright (C) Dean Camera, 2012.
  11:./tmk_core/protocol/lufa/descriptor.c **** 
  12:./tmk_core/protocol/lufa/descriptor.c ****   dean [at] fourwalledcubicle [dot] com
  13:./tmk_core/protocol/lufa/descriptor.c ****            www.lufa-lib.org
  14:./tmk_core/protocol/lufa/descriptor.c **** */
  15:./tmk_core/protocol/lufa/descriptor.c **** 
  16:./tmk_core/protocol/lufa/descriptor.c **** /*
  17:./tmk_core/protocol/lufa/descriptor.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:./tmk_core/protocol/lufa/descriptor.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:./tmk_core/protocol/lufa/descriptor.c **** 
  20:./tmk_core/protocol/lufa/descriptor.c ****   Permission to use, copy, modify, distribute, and sell this
  21:./tmk_core/protocol/lufa/descriptor.c ****   software and its documentation for any purpose is hereby granted
  22:./tmk_core/protocol/lufa/descriptor.c ****   without fee, provided that the above copyright notice appear in
  23:./tmk_core/protocol/lufa/descriptor.c ****   all copies and that both that the copyright notice and this
  24:./tmk_core/protocol/lufa/descriptor.c ****   permission notice and warranty disclaimer appear in supporting
  25:./tmk_core/protocol/lufa/descriptor.c ****   documentation, and that the name of the author not be used in
  26:./tmk_core/protocol/lufa/descriptor.c ****   advertising or publicity pertaining to distribution of the
  27:./tmk_core/protocol/lufa/descriptor.c ****   software without specific, written prior permission.
  28:./tmk_core/protocol/lufa/descriptor.c **** 
  29:./tmk_core/protocol/lufa/descriptor.c ****   The author disclaim all warranties with regard to this
  30:./tmk_core/protocol/lufa/descriptor.c ****   software, including all implied warranties of merchantability
  31:./tmk_core/protocol/lufa/descriptor.c ****   and fitness.  In no event shall the author be liable for any
  32:./tmk_core/protocol/lufa/descriptor.c ****   special, indirect or consequential damages or any damages
  33:./tmk_core/protocol/lufa/descriptor.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:./tmk_core/protocol/lufa/descriptor.c ****   in an action of contract, negligence or other tortious action,
  35:./tmk_core/protocol/lufa/descriptor.c ****   arising out of or in connection with the use or performance of
  36:./tmk_core/protocol/lufa/descriptor.c ****   this software.
  37:./tmk_core/protocol/lufa/descriptor.c **** */
  38:./tmk_core/protocol/lufa/descriptor.c **** 
  39:./tmk_core/protocol/lufa/descriptor.c **** #include "util.h"
  40:./tmk_core/protocol/lufa/descriptor.c **** #include "report.h"
  41:./tmk_core/protocol/lufa/descriptor.c **** #include "descriptor.h"
  42:./tmk_core/protocol/lufa/descriptor.c **** 
  43:./tmk_core/protocol/lufa/descriptor.c **** 
  44:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
  45:./tmk_core/protocol/lufa/descriptor.c ****  * HID Report Descriptors
  46:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
  47:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM KeyboardReport[] =
  48:./tmk_core/protocol/lufa/descriptor.c **** {
  49:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  50:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
  51:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  52:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
  53:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
  54:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
  55:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  56:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
  57:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
  58:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  59:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
  60:./tmk_core/protocol/lufa/descriptor.c **** 
  61:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  62:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  63:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_CONSTANT),  /* reserved */
  64:./tmk_core/protocol/lufa/descriptor.c **** 
  65:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
  66:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
  67:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
  68:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
  69:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  70:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
  71:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  72:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
  73:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
  74:./tmk_core/protocol/lufa/descriptor.c **** 
  75:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Keyboard */
  76:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00),
  77:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xFF), /* Usage ID 0x00-0xFF */
  78:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  79:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF), /* needs 16 bit to indicate positive value */
  80:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x06),
  81:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  82:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
  83:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
  84:./tmk_core/protocol/lufa/descriptor.c **** };
  85:./tmk_core/protocol/lufa/descriptor.c **** 
  86:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
  87:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM MouseReport[] =
  88:./tmk_core/protocol/lufa/descriptor.c **** {
  89:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  90:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x02), /* Mouse */
  91:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  92:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x01), /* Pointer */
  93:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_COLLECTION(8, 0x00), /* Physical */
  94:./tmk_core/protocol/lufa/descriptor.c **** 
  95:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x09), /* Button */
  96:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MINIMUM(8, 0x01),  /* Button 1 */
  97:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MAXIMUM(8, 0x05),  /* Button 5 */
  98:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, 0x00),
  99:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 100:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x05),
 101:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x01),
 102:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 103:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 104:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x03),
 105:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_CONSTANT),
 106:./tmk_core/protocol/lufa/descriptor.c **** 
 107:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 108:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x30), /* Usage X */
 109:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x31), /* Usage Y */
 110:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 111:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 112:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x02),
 113:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 114:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 115:./tmk_core/protocol/lufa/descriptor.c **** 
 116:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x38), /* Wheel */
 117:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 118:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 119:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 120:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 121:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 122:./tmk_core/protocol/lufa/descriptor.c **** 
 123:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 124:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(16, 0x0238), /* AC Pan (Horizontal wheel) */
 125:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 126:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 127:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 128:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 129:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 130:./tmk_core/protocol/lufa/descriptor.c **** 
 131:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_END_COLLECTION(0),
 132:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 133:./tmk_core/protocol/lufa/descriptor.c **** };
 134:./tmk_core/protocol/lufa/descriptor.c **** #endif
 135:./tmk_core/protocol/lufa/descriptor.c **** 
 136:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 137:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ExtrakeyReport[] =
 138:./tmk_core/protocol/lufa/descriptor.c **** {
 139:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 140:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x80), /* System Control */
 141:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 142:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_SYSTEM),
 143:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0081),
 144:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00B7),
 145:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0081), /* System Power Down */
 146:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x00B7), /* System Display LCD Autoscale */
 147:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 148:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 149:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 150:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 151:./tmk_core/protocol/lufa/descriptor.c **** 
 152:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 153:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x01), /* Consumer Control */
 154:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 155:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_CONSUMER),
 156:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 157:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x029C),
 158:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* +10 */
 159:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x029C), /* AC Distribute Vertically */
 160:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 161:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 162:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 163:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 164:./tmk_core/protocol/lufa/descriptor.c **** };
 165:./tmk_core/protocol/lufa/descriptor.c **** #endif
 166:./tmk_core/protocol/lufa/descriptor.c **** 
 167:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 168:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ConsoleReport[] =
 169:./tmk_core/protocol/lufa/descriptor.c **** {
 170:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF31), /* Vendor Page(PJRC Teensy compatible) */
 171:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x74), /* Vendor Usage(PJRC Teensy compatible) */
 172:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 173:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x75), /* Vendor Usage 0x75 */
 174:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 175:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 176:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 177:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 178:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 179:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x76), /* Vendor Usage 0x76 */
 180:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 181:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 182:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 183:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 184:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 185:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 186:./tmk_core/protocol/lufa/descriptor.c **** };
 187:./tmk_core/protocol/lufa/descriptor.c **** #endif
 188:./tmk_core/protocol/lufa/descriptor.c **** 
 189:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 190:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM NKROReport[] =
 191:./tmk_core/protocol/lufa/descriptor.c **** {
 192:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 193:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
 194:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 195:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 196:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
 197:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
 198:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 199:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 200:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
 201:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 202:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 203:./tmk_core/protocol/lufa/descriptor.c **** 
 204:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
 205:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
 206:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
 207:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
 208:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 209:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 210:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
 211:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
 212:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
 213:./tmk_core/protocol/lufa/descriptor.c **** 
 214:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 215:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Keyboard 0 */
 216:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, (NKRO_EPSIZE-1)*8-1), /* Keyboard Right GUI */
 217:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 218:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 219:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, (NKRO_EPSIZE-1)*8),
 220:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 221:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 222:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 223:./tmk_core/protocol/lufa/descriptor.c **** };
 224:./tmk_core/protocol/lufa/descriptor.c **** #endif
 225:./tmk_core/protocol/lufa/descriptor.c **** 
 226:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 227:./tmk_core/protocol/lufa/descriptor.c ****  * Device Descriptors
 228:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 229:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Device_t PROGMEM DeviceDescriptor =
 230:./tmk_core/protocol/lufa/descriptor.c **** {
 231:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
 232:./tmk_core/protocol/lufa/descriptor.c **** 
 233:./tmk_core/protocol/lufa/descriptor.c ****     .USBSpecification       = VERSION_BCD(1,1,0),
 234:./tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_NoDeviceClass,
 235:./tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_NoDeviceSubclass,
 236:./tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_NoDeviceProtocol,
 237:./tmk_core/protocol/lufa/descriptor.c **** 
 238:./tmk_core/protocol/lufa/descriptor.c ****     .Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
 239:./tmk_core/protocol/lufa/descriptor.c **** 
 240:./tmk_core/protocol/lufa/descriptor.c ****     /* specified in config.h */
 241:./tmk_core/protocol/lufa/descriptor.c ****     .VendorID               = VENDOR_ID,
 242:./tmk_core/protocol/lufa/descriptor.c ****     .ProductID              = PRODUCT_ID,
 243:./tmk_core/protocol/lufa/descriptor.c ****     .ReleaseNumber          = DEVICE_VER,
 244:./tmk_core/protocol/lufa/descriptor.c **** 
 245:./tmk_core/protocol/lufa/descriptor.c ****     .ManufacturerStrIndex   = 0x01,
 246:./tmk_core/protocol/lufa/descriptor.c ****     .ProductStrIndex        = 0x02,
 247:./tmk_core/protocol/lufa/descriptor.c ****     .SerialNumStrIndex      = NO_DESCRIPTOR,
 248:./tmk_core/protocol/lufa/descriptor.c **** 
 249:./tmk_core/protocol/lufa/descriptor.c ****     .NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
 250:./tmk_core/protocol/lufa/descriptor.c **** };
 251:./tmk_core/protocol/lufa/descriptor.c **** 
 252:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 253:./tmk_core/protocol/lufa/descriptor.c ****  * Configuration Descriptors
 254:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 255:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Configuration_t PROGMEM ConfigurationDescriptor =
 256:./tmk_core/protocol/lufa/descriptor.c **** {
 257:./tmk_core/protocol/lufa/descriptor.c ****     .Config =
 258:./tmk_core/protocol/lufa/descriptor.c ****         {
 259:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type
 260:./tmk_core/protocol/lufa/descriptor.c **** 
 261:./tmk_core/protocol/lufa/descriptor.c ****             .TotalConfigurationSize = sizeof(USB_Descriptor_Configuration_t),
 262:./tmk_core/protocol/lufa/descriptor.c ****             .TotalInterfaces        = TOTAL_INTERFACES,
 263:./tmk_core/protocol/lufa/descriptor.c **** 
 264:./tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationNumber    = 1,
 265:./tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationStrIndex  = NO_DESCRIPTOR,
 266:./tmk_core/protocol/lufa/descriptor.c **** 
 267:./tmk_core/protocol/lufa/descriptor.c ****             .ConfigAttributes       = (USB_CONFIG_ATTR_RESERVED | USB_CONFIG_ATTR_REMOTEWAKEUP),
 268:./tmk_core/protocol/lufa/descriptor.c **** 
 269:./tmk_core/protocol/lufa/descriptor.c ****             .MaxPowerConsumption    = USB_CONFIG_POWER_MA(100)
 270:./tmk_core/protocol/lufa/descriptor.c ****         },
 271:./tmk_core/protocol/lufa/descriptor.c **** 
 272:./tmk_core/protocol/lufa/descriptor.c ****     /*
 273:./tmk_core/protocol/lufa/descriptor.c ****      * Keyboard
 274:./tmk_core/protocol/lufa/descriptor.c ****      */
 275:./tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_Interface =
 276:./tmk_core/protocol/lufa/descriptor.c ****         {
 277:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 278:./tmk_core/protocol/lufa/descriptor.c **** 
 279:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = KEYBOARD_INTERFACE,
 280:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 281:./tmk_core/protocol/lufa/descriptor.c **** 
 282:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 283:./tmk_core/protocol/lufa/descriptor.c **** 
 284:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 285:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 286:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_KeyboardBootProtocol,
 287:./tmk_core/protocol/lufa/descriptor.c **** 
 288:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 289:./tmk_core/protocol/lufa/descriptor.c ****         },
 290:./tmk_core/protocol/lufa/descriptor.c **** 
 291:./tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_HID =
 292:./tmk_core/protocol/lufa/descriptor.c ****         {
 293:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 294:./tmk_core/protocol/lufa/descriptor.c **** 
 295:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 296:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 297:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 298:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 299:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(KeyboardReport)
 300:./tmk_core/protocol/lufa/descriptor.c ****         },
 301:./tmk_core/protocol/lufa/descriptor.c **** 
 302:./tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_INEndpoint =
 303:./tmk_core/protocol/lufa/descriptor.c ****         {
 304:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 305:./tmk_core/protocol/lufa/descriptor.c **** 
 306:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | KEYBOARD_IN_EPNUM),
 307:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 308:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = KEYBOARD_EPSIZE,
 309:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 310:./tmk_core/protocol/lufa/descriptor.c ****         },
 311:./tmk_core/protocol/lufa/descriptor.c **** 
 312:./tmk_core/protocol/lufa/descriptor.c ****     /*
 313:./tmk_core/protocol/lufa/descriptor.c ****      * Mouse
 314:./tmk_core/protocol/lufa/descriptor.c ****      */
 315:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 316:./tmk_core/protocol/lufa/descriptor.c ****     .Mouse_Interface =
 317:./tmk_core/protocol/lufa/descriptor.c ****         {
 318:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 319:./tmk_core/protocol/lufa/descriptor.c **** 
 320:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = MOUSE_INTERFACE,
 321:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 322:./tmk_core/protocol/lufa/descriptor.c **** 
 323:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 324:./tmk_core/protocol/lufa/descriptor.c **** 
 325:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 326:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 327:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_MouseBootProtocol,
 328:./tmk_core/protocol/lufa/descriptor.c **** 
 329:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 330:./tmk_core/protocol/lufa/descriptor.c ****         },
 331:./tmk_core/protocol/lufa/descriptor.c **** 
 332:./tmk_core/protocol/lufa/descriptor.c ****     .Mouse_HID =
 333:./tmk_core/protocol/lufa/descriptor.c ****         {
 334:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 335:./tmk_core/protocol/lufa/descriptor.c **** 
 336:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 337:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 338:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 339:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 340:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(MouseReport)
 341:./tmk_core/protocol/lufa/descriptor.c ****         },
 342:./tmk_core/protocol/lufa/descriptor.c **** 
 343:./tmk_core/protocol/lufa/descriptor.c ****     .Mouse_INEndpoint =
 344:./tmk_core/protocol/lufa/descriptor.c ****         {
 345:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 346:./tmk_core/protocol/lufa/descriptor.c **** 
 347:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | MOUSE_IN_EPNUM),
 348:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 349:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = MOUSE_EPSIZE,
 350:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 351:./tmk_core/protocol/lufa/descriptor.c ****         },
 352:./tmk_core/protocol/lufa/descriptor.c **** #endif
 353:./tmk_core/protocol/lufa/descriptor.c **** 
 354:./tmk_core/protocol/lufa/descriptor.c ****     /*
 355:./tmk_core/protocol/lufa/descriptor.c ****      * Extra
 356:./tmk_core/protocol/lufa/descriptor.c ****      */
 357:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 358:./tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_Interface =
 359:./tmk_core/protocol/lufa/descriptor.c ****         {
 360:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 361:./tmk_core/protocol/lufa/descriptor.c **** 
 362:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = EXTRAKEY_INTERFACE,
 363:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 364:./tmk_core/protocol/lufa/descriptor.c **** 
 365:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 366:./tmk_core/protocol/lufa/descriptor.c **** 
 367:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 368:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 369:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 370:./tmk_core/protocol/lufa/descriptor.c **** 
 371:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 372:./tmk_core/protocol/lufa/descriptor.c ****         },
 373:./tmk_core/protocol/lufa/descriptor.c **** 
 374:./tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_HID =
 375:./tmk_core/protocol/lufa/descriptor.c ****         {
 376:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 377:./tmk_core/protocol/lufa/descriptor.c **** 
 378:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 379:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 380:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 381:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 382:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ExtrakeyReport)
 383:./tmk_core/protocol/lufa/descriptor.c ****         },
 384:./tmk_core/protocol/lufa/descriptor.c **** 
 385:./tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_INEndpoint =
 386:./tmk_core/protocol/lufa/descriptor.c ****         {
 387:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 388:./tmk_core/protocol/lufa/descriptor.c **** 
 389:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | EXTRAKEY_IN_EPNUM),
 390:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 391:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = EXTRAKEY_EPSIZE,
 392:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 393:./tmk_core/protocol/lufa/descriptor.c ****         },
 394:./tmk_core/protocol/lufa/descriptor.c **** #endif
 395:./tmk_core/protocol/lufa/descriptor.c **** 
 396:./tmk_core/protocol/lufa/descriptor.c ****     /*
 397:./tmk_core/protocol/lufa/descriptor.c ****      * Console
 398:./tmk_core/protocol/lufa/descriptor.c ****      */
 399:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 400:./tmk_core/protocol/lufa/descriptor.c ****     .Console_Interface =
 401:./tmk_core/protocol/lufa/descriptor.c ****         {
 402:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 403:./tmk_core/protocol/lufa/descriptor.c **** 
 404:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = CONSOLE_INTERFACE,
 405:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 406:./tmk_core/protocol/lufa/descriptor.c **** 
 407:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 2,
 408:./tmk_core/protocol/lufa/descriptor.c **** 
 409:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 410:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 411:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 412:./tmk_core/protocol/lufa/descriptor.c **** 
 413:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 414:./tmk_core/protocol/lufa/descriptor.c ****         },
 415:./tmk_core/protocol/lufa/descriptor.c **** 
 416:./tmk_core/protocol/lufa/descriptor.c ****     .Console_HID =
 417:./tmk_core/protocol/lufa/descriptor.c ****         {
 418:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 419:./tmk_core/protocol/lufa/descriptor.c **** 
 420:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 421:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 422:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 423:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 424:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ConsoleReport)
 425:./tmk_core/protocol/lufa/descriptor.c ****         },
 426:./tmk_core/protocol/lufa/descriptor.c **** 
 427:./tmk_core/protocol/lufa/descriptor.c ****     .Console_INEndpoint =
 428:./tmk_core/protocol/lufa/descriptor.c ****         {
 429:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 430:./tmk_core/protocol/lufa/descriptor.c **** 
 431:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | CONSOLE_IN_EPNUM),
 432:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 433:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 434:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 435:./tmk_core/protocol/lufa/descriptor.c ****         },
 436:./tmk_core/protocol/lufa/descriptor.c **** 
 437:./tmk_core/protocol/lufa/descriptor.c ****     .Console_OUTEndpoint =
 438:./tmk_core/protocol/lufa/descriptor.c ****         {
 439:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 440:./tmk_core/protocol/lufa/descriptor.c **** 
 441:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_OUT | CONSOLE_OUT_EPNUM),
 442:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 443:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 444:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 445:./tmk_core/protocol/lufa/descriptor.c ****         },
 446:./tmk_core/protocol/lufa/descriptor.c **** #endif
 447:./tmk_core/protocol/lufa/descriptor.c **** 
 448:./tmk_core/protocol/lufa/descriptor.c ****     /*
 449:./tmk_core/protocol/lufa/descriptor.c ****      * NKRO
 450:./tmk_core/protocol/lufa/descriptor.c ****      */
 451:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 452:./tmk_core/protocol/lufa/descriptor.c ****     .NKRO_Interface =
 453:./tmk_core/protocol/lufa/descriptor.c ****         {
 454:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 455:./tmk_core/protocol/lufa/descriptor.c **** 
 456:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = NKRO_INTERFACE,
 457:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 458:./tmk_core/protocol/lufa/descriptor.c **** 
 459:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 460:./tmk_core/protocol/lufa/descriptor.c **** 
 461:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 462:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 463:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 464:./tmk_core/protocol/lufa/descriptor.c **** 
 465:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 466:./tmk_core/protocol/lufa/descriptor.c ****         },
 467:./tmk_core/protocol/lufa/descriptor.c **** 
 468:./tmk_core/protocol/lufa/descriptor.c ****     .NKRO_HID =
 469:./tmk_core/protocol/lufa/descriptor.c ****         {
 470:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 471:./tmk_core/protocol/lufa/descriptor.c **** 
 472:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 473:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 474:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 475:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 476:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(NKROReport)
 477:./tmk_core/protocol/lufa/descriptor.c ****         },
 478:./tmk_core/protocol/lufa/descriptor.c **** 
 479:./tmk_core/protocol/lufa/descriptor.c ****     .NKRO_INEndpoint =
 480:./tmk_core/protocol/lufa/descriptor.c ****         {
 481:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 482:./tmk_core/protocol/lufa/descriptor.c **** 
 483:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | NKRO_IN_EPNUM),
 484:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 485:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = NKRO_EPSIZE,
 486:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 487:./tmk_core/protocol/lufa/descriptor.c ****         },
 488:./tmk_core/protocol/lufa/descriptor.c **** #endif
 489:./tmk_core/protocol/lufa/descriptor.c **** };
 490:./tmk_core/protocol/lufa/descriptor.c **** 
 491:./tmk_core/protocol/lufa/descriptor.c **** 
 492:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 493:./tmk_core/protocol/lufa/descriptor.c ****  * String Descriptors
 494:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 495:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM LanguageString =
 496:./tmk_core/protocol/lufa/descriptor.c **** {
 497:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(1), .Type = DTYPE_String},
 498:./tmk_core/protocol/lufa/descriptor.c **** 
 499:./tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = {LANGUAGE_ID_ENG}
 500:./tmk_core/protocol/lufa/descriptor.c **** };
 501:./tmk_core/protocol/lufa/descriptor.c **** 
 502:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ManufacturerString =
 503:./tmk_core/protocol/lufa/descriptor.c **** {
 504:./tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 505:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(MANUFACTURER))-1), .Type = DTYPE_S
 506:./tmk_core/protocol/lufa/descriptor.c **** 
 507:./tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(MANUFACTURER)
 508:./tmk_core/protocol/lufa/descriptor.c **** };
 509:./tmk_core/protocol/lufa/descriptor.c **** 
 510:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ProductString =
 511:./tmk_core/protocol/lufa/descriptor.c **** {
 512:./tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 513:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(PRODUCT))-1), .Type = DTYPE_String
 514:./tmk_core/protocol/lufa/descriptor.c **** 
 515:./tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(PRODUCT)
 516:./tmk_core/protocol/lufa/descriptor.c **** };
 517:./tmk_core/protocol/lufa/descriptor.c **** 
 518:./tmk_core/protocol/lufa/descriptor.c **** 
 519:./tmk_core/protocol/lufa/descriptor.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 520:./tmk_core/protocol/lufa/descriptor.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 521:./tmk_core/protocol/lufa/descriptor.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 522:./tmk_core/protocol/lufa/descriptor.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 523:./tmk_core/protocol/lufa/descriptor.c ****  *  USB host.
 524:./tmk_core/protocol/lufa/descriptor.c ****  */
 525:./tmk_core/protocol/lufa/descriptor.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 526:./tmk_core/protocol/lufa/descriptor.c ****                                     const uint8_t wIndex,
 527:./tmk_core/protocol/lufa/descriptor.c ****                                     const void** const DescriptorAddress)
 528:./tmk_core/protocol/lufa/descriptor.c **** {
  16               		.loc 1 528 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 529:./tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorType   = (wValue >> 8);
  23               		.loc 1 529 0
  24 0000 292F      		mov r18,r25
  25 0002 3327      		clr r19
 530:./tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorIndex  = (wValue & 0xFF);
 531:./tmk_core/protocol/lufa/descriptor.c **** 
 532:./tmk_core/protocol/lufa/descriptor.c ****     const void* Address = NULL;
 533:./tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
 534:./tmk_core/protocol/lufa/descriptor.c **** 
 535:./tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  26               		.loc 1 535 0
  27 0004 2330      		cpi r18,3
  28 0006 3105      		cpc r19,__zero_reg__
  29 0008 01F0      		breq .L3
  30 000a 04F4      		brge .L4
  31 000c 2130      		cpi r18,1
  32 000e 3105      		cpc r19,__zero_reg__
  33 0010 01F4      		brne .+2
  34 0012 00C0      		rjmp .L12
  35 0014 2230      		cpi r18,2
  36 0016 3105      		cpc r19,__zero_reg__
  37 0018 01F0      		breq .+2
  38 001a 00C0      		rjmp .L15
  39               	.LVL1:
 536:./tmk_core/protocol/lufa/descriptor.c ****     {
 537:./tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Device:
 538:./tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 539:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 540:./tmk_core/protocol/lufa/descriptor.c ****             break;
 541:./tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Configuration:
 542:./tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
 543:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
  40               		.loc 1 543 0
  41 001c 84E7      		ldi r24,lo8(116)
  42 001e 90E0      		ldi r25,0
  43               	.LVL2:
 542:./tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
  44               		.loc 1 542 0
  45 0020 20E0      		ldi r18,lo8(ConfigurationDescriptor)
  46 0022 30E0      		ldi r19,hi8(ConfigurationDescriptor)
 544:./tmk_core/protocol/lufa/descriptor.c ****             break;
  47               		.loc 1 544 0
  48 0024 00C0      		rjmp .L5
  49               	.LVL3:
  50               	.L4:
 535:./tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  51               		.loc 1 535 0
  52 0026 2132      		cpi r18,33
  53 0028 3105      		cpc r19,__zero_reg__
  54 002a 01F0      		breq .L7
  55 002c 2232      		cpi r18,34
  56 002e 3105      		cpc r19,__zero_reg__
  57 0030 01F0      		breq .L8
  58 0032 00C0      		rjmp .L15
  59               	.L3:
  60 0034 9927      		clr r25
  61               	.LVL4:
 545:./tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_String:
 546:./tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
  62               		.loc 1 546 0
  63 0036 8130      		cpi r24,1
  64 0038 9105      		cpc r25,__zero_reg__
  65 003a 01F0      		breq .L9
  66 003c 8230      		cpi r24,2
  67 003e 9105      		cpc r25,__zero_reg__
  68 0040 01F0      		breq .L10
  69 0042 892B      		or r24,r25
  70 0044 01F4      		brne .L15
  71               	.LVL5:
  72               	.LBB2:
 547:./tmk_core/protocol/lufa/descriptor.c ****             {
 548:./tmk_core/protocol/lufa/descriptor.c ****                 case 0x00:
 549:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
 550:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
  73               		.loc 1 550 0
  74 0046 E0E0      		ldi r30,lo8(LanguageString)
  75 0048 F0E0      		ldi r31,hi8(LanguageString)
  76 004a 00C0      		rjmp .L17
  77               	.LVL6:
  78               	.L9:
  79               	.LBE2:
  80               	.LBB3:
 551:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 552:./tmk_core/protocol/lufa/descriptor.c ****                 case 0x01:
 553:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 554:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
  81               		.loc 1 554 0
  82 004c E0E0      		ldi r30,lo8(ManufacturerString)
  83 004e F0E0      		ldi r31,hi8(ManufacturerString)
  84 0050 00C0      		rjmp .L17
  85               	.LVL7:
  86               	.L10:
  87               	.LBE3:
  88               	.LBB4:
 555:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 556:./tmk_core/protocol/lufa/descriptor.c ****                 case 0x02:
 557:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 558:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
  89               		.loc 1 558 0
  90 0052 E0E0      		ldi r30,lo8(ProductString)
  91 0054 F0E0      		ldi r31,hi8(ProductString)
  92               	.LVL8:
  93               	.L17:
  94               	/* #APP */
  95               	 ;  558 "./tmk_core/protocol/lufa/descriptor.c" 1
  96 0056 8491      		lpm r24, Z
  97               		
  98               	 ;  0 "" 2
  99               	.LVL9:
 100               	/* #NOAPP */
 101               	.LBE4:
 102 0058 90E0      		ldi r25,0
 103               	.LVL10:
 557:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 104               		.loc 1 557 0
 105 005a 9F01      		movw r18,r30
 559:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 106               		.loc 1 559 0
 107 005c 00C0      		rjmp .L5
 108               	.LVL11:
 109               	.L7:
 110 005e 6430      		cpi r22,lo8(4)
 111 0060 00F4      		brsh .L15
 112 0062 E62F      		mov r30,r22
 113 0064 F0E0      		ldi r31,0
 114 0066 EE0F      		lsl r30
 115 0068 FF1F      		rol r31
 116 006a E050      		subi r30,lo8(-(CSWTCH.1))
 117 006c F040      		sbci r31,hi8(-(CSWTCH.1))
 118 006e 2081      		ld r18,Z
 119 0070 3181      		ldd r19,Z+1
 120 0072 89E0      		ldi r24,lo8(9)
 121 0074 90E0      		ldi r25,0
 122               	.LVL12:
 123 0076 00C0      		rjmp .L5
 124               	.LVL13:
 125               	.L8:
 126 0078 6430      		cpi r22,lo8(4)
 127 007a 00F4      		brsh .L15
 128 007c E62F      		mov r30,r22
 129 007e F0E0      		ldi r31,0
 130 0080 DF01      		movw r26,r30
 131 0082 AA0F      		lsl r26
 132 0084 BB1F      		rol r27
 133               	.LVL14:
 134 0086 A050      		subi r26,lo8(-(CSWTCH.2))
 135 0088 B040      		sbci r27,hi8(-(CSWTCH.2))
 136 008a 2D91      		ld r18,X+
 137 008c 3C91      		ld r19,X
 138 008e E050      		subi r30,lo8(-(CSWTCH.3))
 139 0090 F040      		sbci r31,hi8(-(CSWTCH.3))
 140 0092 8081      		ld r24,Z
 141 0094 90E0      		ldi r25,0
 142 0096 00C0      		rjmp .L5
 143               	.LVL15:
 144               	.L12:
 539:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 145               		.loc 1 539 0
 146 0098 82E1      		ldi r24,lo8(18)
 147 009a 90E0      		ldi r25,0
 148               	.LVL16:
 538:./tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 149               		.loc 1 538 0
 150 009c 20E0      		ldi r18,lo8(DeviceDescriptor)
 151 009e 30E0      		ldi r19,hi8(DeviceDescriptor)
 152 00a0 00C0      		rjmp .L5
 153               	.L15:
 154 00a2 80E0      		ldi r24,0
 155 00a4 90E0      		ldi r25,0
 156 00a6 20E0      		ldi r18,0
 157 00a8 30E0      		ldi r19,0
 158               	.LVL17:
 159               	.L5:
 560:./tmk_core/protocol/lufa/descriptor.c ****             }
 561:./tmk_core/protocol/lufa/descriptor.c ****             break;
 562:./tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_HID:
 563:./tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 564:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 565:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Keyboard_HID;
 566:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 567:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 568:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 569:./tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 570:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Mouse_HID;
 571:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 572:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 573:./tmk_core/protocol/lufa/descriptor.c **** #endif
 574:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 575:./tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 576:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Extrakey_HID;
 577:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 578:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 579:./tmk_core/protocol/lufa/descriptor.c **** #endif
 580:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 581:./tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 582:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Console_HID;
 583:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 584:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 585:./tmk_core/protocol/lufa/descriptor.c **** #endif
 586:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 587:./tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 588:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.NKRO_HID;
 589:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 590:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 591:./tmk_core/protocol/lufa/descriptor.c **** #endif
 592:./tmk_core/protocol/lufa/descriptor.c ****             }
 593:./tmk_core/protocol/lufa/descriptor.c ****             break;
 594:./tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_Report:
 595:./tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 596:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 597:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &KeyboardReport;
 598:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(KeyboardReport);
 599:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 600:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 601:./tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 602:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &MouseReport;
 603:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(MouseReport);
 604:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 605:./tmk_core/protocol/lufa/descriptor.c **** #endif
 606:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 607:./tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 608:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ExtrakeyReport;
 609:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ExtrakeyReport);
 610:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 611:./tmk_core/protocol/lufa/descriptor.c **** #endif
 612:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 613:./tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 614:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConsoleReport;
 615:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ConsoleReport);
 616:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 617:./tmk_core/protocol/lufa/descriptor.c **** #endif
 618:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 619:./tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 620:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &NKROReport;
 621:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(NKROReport);
 622:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 623:./tmk_core/protocol/lufa/descriptor.c **** #endif
 624:./tmk_core/protocol/lufa/descriptor.c ****             }
 625:./tmk_core/protocol/lufa/descriptor.c ****             break;
 626:./tmk_core/protocol/lufa/descriptor.c ****     }
 627:./tmk_core/protocol/lufa/descriptor.c **** 
 628:./tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 160               		.loc 1 628 0
 161 00aa FA01      		movw r30,r20
 162 00ac 3183      		std Z+1,r19
 163 00ae 2083      		st Z,r18
 629:./tmk_core/protocol/lufa/descriptor.c ****     return Size;
 630:./tmk_core/protocol/lufa/descriptor.c **** }
 164               		.loc 1 630 0
 165 00b0 0895      		ret
 166               		.cfi_endproc
 167               	.LFE100:
 169               		.section	.rodata.CSWTCH.3,"a",@progbits
 172               	CSWTCH.3:
 173 0000 40        		.byte	64
 174 0001 4D        		.byte	77
 175 0002 36        		.byte	54
 176 0003 22        		.byte	34
 177               		.section	.rodata.CSWTCH.2,"a",@progbits
 180               	CSWTCH.2:
 181 0000 0000      		.word	KeyboardReport
 182 0002 0000      		.word	MouseReport
 183 0004 0000      		.word	ExtrakeyReport
 184 0006 0000      		.word	ConsoleReport
 185               		.section	.rodata.CSWTCH.1,"a",@progbits
 188               	CSWTCH.1:
 189 0000 0000      		.word	ConfigurationDescriptor+18
 190 0002 0000      		.word	ConfigurationDescriptor+43
 191 0004 0000      		.word	ConfigurationDescriptor+68
 192 0006 0000      		.word	ConfigurationDescriptor+93
 193               	.global	ProductString
 194               		.section	.progmem.data.ProductString,"a",@progbits
 197               	ProductString:
 198 0000 12        		.byte	18
 199 0001 03        		.byte	3
 200 0002 4800      		.string	"H"
 201 0004 4800      		.string	"H"
 202 0006 4B00      		.string	"K"
 203 0008 4200      		.string	"B"
 204 000a 2000      		.string	" "
 205 000c 6D00      		.string	"m"
 206 000e 6F00      		.string	"o"
 207 0010 6400      		.string	"d"
 208 0012 00        		.string	""
 209 0013 00        		.string	""
 210               	.global	ManufacturerString
 211               		.section	.progmem.data.ManufacturerString,"a",@progbits
 214               	ManufacturerString:
 215 0000 0E        		.byte	14
 216 0001 03        		.byte	3
 217 0002 7400      		.string	"t"
 218 0004 2E00      		.string	"."
 219 0006 6D00      		.string	"m"
 220 0008 2E00      		.string	"."
 221 000a 6B00      		.string	"k"
 222 000c 2E00      		.string	"."
 223 000e 00        		.string	""
 224 000f 00        		.string	""
 225               	.global	LanguageString
 226               		.section	.progmem.data.LanguageString,"a",@progbits
 229               	LanguageString:
 230 0000 04        		.byte	4
 231 0001 03        		.byte	3
 232 0002 0904      		.word	1033
 233               	.global	ConfigurationDescriptor
 234               		.section	.progmem.data.ConfigurationDescriptor,"a",@progbits
 237               	ConfigurationDescriptor:
 238 0000 09        		.byte	9
 239 0001 02        		.byte	2
 240 0002 7400      		.word	116
 241 0004 04        		.byte	4
 242 0005 01        		.byte	1
 243 0006 00        		.byte	0
 244 0007 A0        		.byte	-96
 245 0008 32        		.byte	50
 246 0009 09        		.byte	9
 247 000a 04        		.byte	4
 248 000b 00        		.byte	0
 249 000c 00        		.byte	0
 250 000d 01        		.byte	1
 251 000e 03        		.byte	3
 252 000f 01        		.byte	1
 253 0010 01        		.byte	1
 254 0011 00        		.byte	0
 255 0012 09        		.byte	9
 256 0013 21        		.byte	33
 257 0014 1101      		.word	273
 258 0016 00        		.byte	0
 259 0017 01        		.byte	1
 260 0018 22        		.byte	34
 261 0019 4000      		.word	64
 262 001b 07        		.byte	7
 263 001c 05        		.byte	5
 264 001d 81        		.byte	-127
 265 001e 03        		.byte	3
 266 001f 0800      		.word	8
 267 0021 0A        		.byte	10
 268 0022 09        		.byte	9
 269 0023 04        		.byte	4
 270 0024 01        		.byte	1
 271 0025 00        		.byte	0
 272 0026 01        		.byte	1
 273 0027 03        		.byte	3
 274 0028 01        		.byte	1
 275 0029 02        		.byte	2
 276 002a 00        		.byte	0
 277 002b 09        		.byte	9
 278 002c 21        		.byte	33
 279 002d 1101      		.word	273
 280 002f 00        		.byte	0
 281 0030 01        		.byte	1
 282 0031 22        		.byte	34
 283 0032 4D00      		.word	77
 284 0034 07        		.byte	7
 285 0035 05        		.byte	5
 286 0036 82        		.byte	-126
 287 0037 03        		.byte	3
 288 0038 0800      		.word	8
 289 003a 0A        		.byte	10
 290 003b 09        		.byte	9
 291 003c 04        		.byte	4
 292 003d 02        		.byte	2
 293 003e 00        		.byte	0
 294 003f 01        		.byte	1
 295 0040 03        		.byte	3
 296 0041 00        		.byte	0
 297 0042 00        		.byte	0
 298 0043 00        		.byte	0
 299 0044 09        		.byte	9
 300 0045 21        		.byte	33
 301 0046 1101      		.word	273
 302 0048 00        		.byte	0
 303 0049 01        		.byte	1
 304 004a 22        		.byte	34
 305 004b 3600      		.word	54
 306 004d 07        		.byte	7
 307 004e 05        		.byte	5
 308 004f 83        		.byte	-125
 309 0050 03        		.byte	3
 310 0051 0800      		.word	8
 311 0053 0A        		.byte	10
 312 0054 09        		.byte	9
 313 0055 04        		.byte	4
 314 0056 03        		.byte	3
 315 0057 00        		.byte	0
 316 0058 02        		.byte	2
 317 0059 03        		.byte	3
 318 005a 00        		.byte	0
 319 005b 00        		.byte	0
 320 005c 00        		.byte	0
 321 005d 09        		.byte	9
 322 005e 21        		.byte	33
 323 005f 1101      		.word	273
 324 0061 00        		.byte	0
 325 0062 01        		.byte	1
 326 0063 22        		.byte	34
 327 0064 2200      		.word	34
 328 0066 07        		.byte	7
 329 0067 05        		.byte	5
 330 0068 84        		.byte	-124
 331 0069 03        		.byte	3
 332 006a 2000      		.word	32
 333 006c 01        		.byte	1
 334 006d 07        		.byte	7
 335 006e 05        		.byte	5
 336 006f 04        		.byte	4
 337 0070 03        		.byte	3
 338 0071 2000      		.word	32
 339 0073 01        		.byte	1
 340               	.global	DeviceDescriptor
 341               		.section	.progmem.data.DeviceDescriptor,"a",@progbits
 344               	DeviceDescriptor:
 345 0000 12        		.byte	18
 346 0001 01        		.byte	1
 347 0002 1001      		.word	272
 348 0004 00        		.byte	0
 349 0005 00        		.byte	0
 350 0006 00        		.byte	0
 351 0007 08        		.byte	8
 352 0008 EDFE      		.word	-275
 353 000a 4242      		.word	16962
 354 000c 0401      		.word	260
 355 000e 01        		.byte	1
 356 000f 02        		.byte	2
 357 0010 00        		.byte	0
 358 0011 01        		.byte	1
 359               	.global	ConsoleReport
 360               		.section	.progmem.data.ConsoleReport,"a",@progbits
 363               	ConsoleReport:
 364 0000 06        		.byte	6
 365 0001 31        		.byte	49
 366 0002 FF        		.byte	-1
 367 0003 09        		.byte	9
 368 0004 74        		.byte	116
 369 0005 A1        		.byte	-95
 370 0006 01        		.byte	1
 371 0007 09        		.byte	9
 372 0008 75        		.byte	117
 373 0009 15        		.byte	21
 374 000a 00        		.byte	0
 375 000b 26        		.byte	38
 376 000c FF        		.byte	-1
 377 000d 00        		.byte	0
 378 000e 95        		.byte	-107
 379 000f 20        		.byte	32
 380 0010 75        		.byte	117
 381 0011 08        		.byte	8
 382 0012 81        		.byte	-127
 383 0013 02        		.byte	2
 384 0014 09        		.byte	9
 385 0015 76        		.byte	118
 386 0016 15        		.byte	21
 387 0017 00        		.byte	0
 388 0018 26        		.byte	38
 389 0019 FF        		.byte	-1
 390 001a 00        		.byte	0
 391 001b 95        		.byte	-107
 392 001c 20        		.byte	32
 393 001d 75        		.byte	117
 394 001e 08        		.byte	8
 395 001f 91        		.byte	-111
 396 0020 02        		.byte	2
 397 0021 C0        		.byte	-64
 398               	.global	ExtrakeyReport
 399               		.section	.progmem.data.ExtrakeyReport,"a",@progbits
 402               	ExtrakeyReport:
 403 0000 05        		.byte	5
 404 0001 01        		.byte	1
 405 0002 09        		.byte	9
 406 0003 80        		.byte	-128
 407 0004 A1        		.byte	-95
 408 0005 01        		.byte	1
 409 0006 85        		.byte	-123
 410 0007 02        		.byte	2
 411 0008 16        		.byte	22
 412 0009 81        		.byte	-127
 413 000a 00        		.byte	0
 414 000b 26        		.byte	38
 415 000c B7        		.byte	-73
 416 000d 00        		.byte	0
 417 000e 1A        		.byte	26
 418 000f 81        		.byte	-127
 419 0010 00        		.byte	0
 420 0011 2A        		.byte	42
 421 0012 B7        		.byte	-73
 422 0013 00        		.byte	0
 423 0014 75        		.byte	117
 424 0015 10        		.byte	16
 425 0016 95        		.byte	-107
 426 0017 01        		.byte	1
 427 0018 81        		.byte	-127
 428 0019 00        		.byte	0
 429 001a C0        		.byte	-64
 430 001b 05        		.byte	5
 431 001c 0C        		.byte	12
 432 001d 09        		.byte	9
 433 001e 01        		.byte	1
 434 001f A1        		.byte	-95
 435 0020 01        		.byte	1
 436 0021 85        		.byte	-123
 437 0022 03        		.byte	3
 438 0023 16        		.byte	22
 439 0024 01        		.byte	1
 440 0025 00        		.byte	0
 441 0026 26        		.byte	38
 442 0027 9C        		.byte	-100
 443 0028 02        		.byte	2
 444 0029 1A        		.byte	26
 445 002a 01        		.byte	1
 446 002b 00        		.byte	0
 447 002c 2A        		.byte	42
 448 002d 9C        		.byte	-100
 449 002e 02        		.byte	2
 450 002f 75        		.byte	117
 451 0030 10        		.byte	16
 452 0031 95        		.byte	-107
 453 0032 01        		.byte	1
 454 0033 81        		.byte	-127
 455 0034 00        		.byte	0
 456 0035 C0        		.byte	-64
 457               	.global	MouseReport
 458               		.section	.progmem.data.MouseReport,"a",@progbits
 461               	MouseReport:
 462 0000 05        		.byte	5
 463 0001 01        		.byte	1
 464 0002 09        		.byte	9
 465 0003 02        		.byte	2
 466 0004 A1        		.byte	-95
 467 0005 01        		.byte	1
 468 0006 09        		.byte	9
 469 0007 01        		.byte	1
 470 0008 A1        		.byte	-95
 471 0009 00        		.byte	0
 472 000a 05        		.byte	5
 473 000b 09        		.byte	9
 474 000c 19        		.byte	25
 475 000d 01        		.byte	1
 476 000e 29        		.byte	41
 477 000f 05        		.byte	5
 478 0010 15        		.byte	21
 479 0011 00        		.byte	0
 480 0012 25        		.byte	37
 481 0013 01        		.byte	1
 482 0014 95        		.byte	-107
 483 0015 05        		.byte	5
 484 0016 75        		.byte	117
 485 0017 01        		.byte	1
 486 0018 81        		.byte	-127
 487 0019 02        		.byte	2
 488 001a 95        		.byte	-107
 489 001b 01        		.byte	1
 490 001c 75        		.byte	117
 491 001d 03        		.byte	3
 492 001e 81        		.byte	-127
 493 001f 01        		.byte	1
 494 0020 05        		.byte	5
 495 0021 01        		.byte	1
 496 0022 09        		.byte	9
 497 0023 30        		.byte	48
 498 0024 09        		.byte	9
 499 0025 31        		.byte	49
 500 0026 15        		.byte	21
 501 0027 81        		.byte	-127
 502 0028 25        		.byte	37
 503 0029 7F        		.byte	127
 504 002a 95        		.byte	-107
 505 002b 02        		.byte	2
 506 002c 75        		.byte	117
 507 002d 08        		.byte	8
 508 002e 81        		.byte	-127
 509 002f 06        		.byte	6
 510 0030 09        		.byte	9
 511 0031 38        		.byte	56
 512 0032 15        		.byte	21
 513 0033 81        		.byte	-127
 514 0034 25        		.byte	37
 515 0035 7F        		.byte	127
 516 0036 95        		.byte	-107
 517 0037 01        		.byte	1
 518 0038 75        		.byte	117
 519 0039 08        		.byte	8
 520 003a 81        		.byte	-127
 521 003b 06        		.byte	6
 522 003c 05        		.byte	5
 523 003d 0C        		.byte	12
 524 003e 0A        		.byte	10
 525 003f 38        		.byte	56
 526 0040 02        		.byte	2
 527 0041 15        		.byte	21
 528 0042 81        		.byte	-127
 529 0043 25        		.byte	37
 530 0044 7F        		.byte	127
 531 0045 95        		.byte	-107
 532 0046 01        		.byte	1
 533 0047 75        		.byte	117
 534 0048 08        		.byte	8
 535 0049 81        		.byte	-127
 536 004a 06        		.byte	6
 537 004b C0        		.byte	-64
 538 004c C0        		.byte	-64
 539               	.global	KeyboardReport
 540               		.section	.progmem.data.KeyboardReport,"a",@progbits
 543               	KeyboardReport:
 544 0000 05        		.byte	5
 545 0001 01        		.byte	1
 546 0002 09        		.byte	9
 547 0003 06        		.byte	6
 548 0004 A1        		.byte	-95
 549 0005 01        		.byte	1
 550 0006 05        		.byte	5
 551 0007 07        		.byte	7
 552 0008 19        		.byte	25
 553 0009 E0        		.byte	-32
 554 000a 29        		.byte	41
 555 000b E7        		.byte	-25
 556 000c 15        		.byte	21
 557 000d 00        		.byte	0
 558 000e 25        		.byte	37
 559 000f 01        		.byte	1
 560 0010 95        		.byte	-107
 561 0011 08        		.byte	8
 562 0012 75        		.byte	117
 563 0013 01        		.byte	1
 564 0014 81        		.byte	-127
 565 0015 02        		.byte	2
 566 0016 95        		.byte	-107
 567 0017 01        		.byte	1
 568 0018 75        		.byte	117
 569 0019 08        		.byte	8
 570 001a 81        		.byte	-127
 571 001b 01        		.byte	1
 572 001c 05        		.byte	5
 573 001d 08        		.byte	8
 574 001e 19        		.byte	25
 575 001f 01        		.byte	1
 576 0020 29        		.byte	41
 577 0021 05        		.byte	5
 578 0022 95        		.byte	-107
 579 0023 05        		.byte	5
 580 0024 75        		.byte	117
 581 0025 01        		.byte	1
 582 0026 91        		.byte	-111
 583 0027 02        		.byte	2
 584 0028 95        		.byte	-107
 585 0029 01        		.byte	1
 586 002a 75        		.byte	117
 587 002b 03        		.byte	3
 588 002c 91        		.byte	-111
 589 002d 01        		.byte	1
 590 002e 05        		.byte	5
 591 002f 07        		.byte	7
 592 0030 19        		.byte	25
 593 0031 00        		.byte	0
 594 0032 29        		.byte	41
 595 0033 FF        		.byte	-1
 596 0034 15        		.byte	21
 597 0035 00        		.byte	0
 598 0036 26        		.byte	38
 599 0037 FF        		.byte	-1
 600 0038 00        		.byte	0
 601 0039 95        		.byte	-107
 602 003a 06        		.byte	6
 603 003b 75        		.byte	117
 604 003c 08        		.byte	8
 605 003d 81        		.byte	-127
 606 003e 00        		.byte	0
 607 003f C0        		.byte	-64
 608               		.text
 609               	.Letext0:
 610               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 611               		.file 3 "/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/include/stddef.h"
 612               		.file 4 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.h"
 613               		.file 5 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCommon.
 614               		.file 6 "./tmk_core/protocol/lufa/descriptor.h"
 615               		.file 7 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:00000000 descriptor.c
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:2      *ABS*:0000003e __SP_H__
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:3      *ABS*:0000003d __SP_L__
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:4      *ABS*:0000003f __SREG__
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:6      *ABS*:00000001 __zero_reg__
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:13     .text.CALLBACK_USB_GetDescriptor:00000000 CALLBACK_USB_GetDescriptor
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:237    .progmem.data.ConfigurationDescriptor:00000000 ConfigurationDescriptor
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:229    .progmem.data.LanguageString:00000000 LanguageString
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:214    .progmem.data.ManufacturerString:00000000 ManufacturerString
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:197    .progmem.data.ProductString:00000000 ProductString
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:188    .rodata.CSWTCH.1:00000000 CSWTCH.1
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:180    .rodata.CSWTCH.2:00000000 CSWTCH.2
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:172    .rodata.CSWTCH.3:00000000 CSWTCH.3
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:344    .progmem.data.DeviceDescriptor:00000000 DeviceDescriptor
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:543    .progmem.data.KeyboardReport:00000000 KeyboardReport
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:461    .progmem.data.MouseReport:00000000 MouseReport
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:402    .progmem.data.ExtrakeyReport:00000000 ExtrakeyReport
/var/folders/60/7jfz_t4j1gl3nbdqv9nkvh7rr0y5vx/T//ccHo6JJt.s:363    .progmem.data.ConsoleReport:00000000 ConsoleReport

UNDEFINED SYMBOLS
__do_copy_data
